using System.Linq;
using GraphQL.Types;
using ISS.Application.Models;
using ISS.Application.Helpers;
using ISS.GraphQL.ServiceExtentions;
using ISS.Application.Dto;

namespace ISS.GraphQL.Type
{
    public class EstadoType : ObjectGraphType<Estado>
    {
        public EstadoType()
        {
            // Defining the name of the object
            Name = "estado";

            Field(x => x.IdEstado, nullable: true);
            Field(x => x.Designacao, nullable: true);
            Field(x => x.CodEstado, nullable: true);
            Field(x => x.DataCriacao, nullable: true, type: typeof(DateTimeGraphType));
            Field(x => x.DataAtualizacao, nullable: true, type: typeof(DateTimeGraphType));
            Field(x => x.UltModificacaoPorId, nullable: true);
            Field(x => x.Obs, nullable: true);
            FieldAsync<ListGraphType<AccionistaEmpresaType>>("accionistaEmpresa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<AccionistaEmpresa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AcrescimoCapitalMinimoType>>("acrescimoCapitalMinimo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<AcrescimoCapitalMinimo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AcrescimoPremiosType>>("acrescimoPremios", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<AcrescimoPremios>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ActividadeType>>("actividade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Actividade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ActividadeContratadaType>>("actividadeContratada", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ActividadeContratada>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ActividadesAgendaType>>("actividadesAgenda", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ActividadesAgenda>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AgendaType>>("agenda", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Agenda>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AgravamentoType>>("agravamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Agravamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AgravamentoAcidentesTrabalhoType>>("agravamentoAcidentesTrabalho", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<AgravamentoAcidentesTrabalho>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AgravamentoLimiteComparticipacaoType>>("agravamentoLimiteComparticipacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<AgravamentoLimiteComparticipacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AgravamentoPessoaType>>("agravamentoPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<AgravamentoPessoa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AjudaCampoTabelaType>>("ajudaCampoTabela", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<AjudaCampoTabela>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AmbitoType>>("ambito", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Ambito>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AnexosAutomovelType>>("anexosAutomovel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<AnexosAutomovel>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AnexosPessoaType>>("anexosPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<AnexosPessoa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AnimaisType>>("animais", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Animais>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AnosType>>("anos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Anos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ApoliceType>>("apolice", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Apolice>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AprovacaoType>>("aprovacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Aprovacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AreaType>>("area", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Area>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ArtigoType>>("artigo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Artigo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AscensoresMontaCargaType>>("ascensoresMontaCarga", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<AscensoresMontaCarga>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AssinaturaType>>("assinatura", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Assinatura>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AtosMedicosType>>("atosMedicos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<AtosMedicos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AutomovelType>>("automovel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Automovel>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AutoridadeSupervisaoType>>("autoridadeSupervisao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<AutoridadeSupervisao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AutoridadesContactadasType>>("autoridadesContactadasCorrespondencia", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<AutoridadesContactadas>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AutoridadesContactadasType>>("autoridadesContactadasEstado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<AutoridadesContactadas>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<AutorizacaoType>>("autorizacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Autorizacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<BairroType>>("bairro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Bairro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<BalancoType>>("balanco", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Balanco>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<BalcaoType>>("balcao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Balcao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<BalcaoPlanoType>>("balcaoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<BalcaoPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<BancoType>>("banco", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Banco>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<BandeiraPagamentoType>>("bandeiraPagamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<BandeiraPagamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<BandeiraTipoCartaoType>>("bandeiraTipoCartao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<BandeiraTipoCartao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<BemAfectadoType>>("bemAfectado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<BemAfectado>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<BemSalvadoType>>("bemSalvado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<BemSalvado>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<BeneficioCoberturaType>>("beneficioCobertura", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<BeneficioCobertura>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<BoletimAdesaoSaudeType>>("boletimAdesaoSaude", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<BoletimAdesaoSaude>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<BonusType>>("bonus", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Bonus>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CaeType>>("cae", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Cae>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CaePlanoType>>("caePlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CaePlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CaixaType>>("caixa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Caixa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CambioType>>("cambio", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Cambio>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CanalType>>("canal", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Canal>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CanalComissionamentoType>>("canalComissionamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CanalComissionamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CanalComissionamentoProdutorType>>("canalComissionamentoProdutor", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CanalComissionamentoProdutor>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CapitalPremioAutomovelType>>("capitalPremioAutomovel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CapitalPremioAutomovel>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CapitalSeguroAutomovelType>>("capitalSeguroAutomovel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CapitalSeguroAutomovel>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CapituloType>>("capitulo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Capitulo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CaracteristicaClassificacaoType>>("caracteristicaClassificacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CaracteristicaClassificacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CaracteristicaObjectoType>>("caracteristicaObjecto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CaracteristicaObjecto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CaracteristicasConstrucaoType>>("caracteristicasConstrucao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CaracteristicasConstrucao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CargoPublicoType>>("cargoPublico", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CargoPublico>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CartaConducaoType>>("cartaConducao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CartaConducao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CartaoCreditoType>>("cartaoCredito", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CartaoCredito>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CartaoPagamentoType>>("cartaoPagamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CartaoPagamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CarteiraClienteType>>("carteiraCliente", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CarteiraCliente>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CasoClassificacaoType>>("casoClassificacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CasoClassificacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CategoriaType>>("categoria", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Categoria>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CategoriaFranquiaType>>("categoriaFranquia", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CategoriaFranquia>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CategoriaFuncaoType>>("categoriaFuncao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CategoriaFuncao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CategoriaGlossarioType>>("categoriaGlossario", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CategoriaGlossario>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CategoriaItensType>>("categoriaItens", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CategoriaItens>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CategoriaJustificacaoType>>("categoriaJustificacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CategoriaJustificacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CategoriaLaboralType>>("categoriaLaboral", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CategoriaLaboral>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CategoriaMetricaKpiType>>("categoriaMetricaKpi", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CategoriaMetricaKpi>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CategoriaSujeitoDanoType>>("categoriaSujeitoDano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CategoriaSujeitoDano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CategoriaTarefaType>>("categoriaTarefa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CategoriaTarefa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CategoriasProdutosInstalacoesType>>("categoriasProdutosInstalacoes", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CategoriasProdutosInstalacoes>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CausadorSinistroType>>("causadorSinistro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CausadorSinistro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CentroCustoType>>("centroCusto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CentroCusto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CentroResponsabilidadeType>>("centroResponsabilidade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CentroResponsabilidade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ChefeDepartamentoType>>("chefeDepartamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ChefeDepartamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ChefeSeccaoType>>("chefeSeccao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ChefeSeccao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ChefeSectorType>>("chefeSector", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ChefeSector>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CidadeType>>("cidade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Cidade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CilindragemAutomovelType>>("cilindragemAutomovel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CilindragemAutomovel>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CircunstanciaAutomovelType>>("circunstanciaAutomovel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CircunstanciaAutomovel>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CircunstanciaObjectoEnvolvidoType>>("circunstanciaObjectoEnvolvido", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CircunstanciaObjectoEnvolvido>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CircunstanciaPerdaType>>("circunstanciaPerda", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CircunstanciaPerda>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClasseCofreType>>("classeCofre", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ClasseCofre>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClasseContaType>>("classeConta", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ClasseConta>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClasseModalidadeSeguroType>>("classeModalidadeSeguro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ClasseModalidadeSeguro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClasseRiscoType>>("classeRisco", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ClasseRisco>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClassificacaoType>>("classificacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Classificacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClassificacaoAprovacaoType>>("classificacaoAprovacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ClassificacaoAprovacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClassificacaoAscensoresMontaCargaType>>("classificacaoAscensoresMontaCarga", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ClassificacaoAscensoresMontaCarga>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClassificacaoAutomovelType>>("classificacaoAutomovel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ClassificacaoAutomovel>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClassificacaoCaixaType>>("classificacaoCaixa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ClassificacaoCaixa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClassificacaoCascoType>>("classificacaoCasco", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ClassificacaoCasco>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClassificacaoContaType>>("classificacaoConta", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ClassificacaoConta>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClassificacaoContratoResseguroType>>("classificacaoContratoResseguro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ClassificacaoContratoResseguro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClassificacaoEntidadeType>>("classificacaoEntidade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ClassificacaoEntidade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClassificacaoGrupoType>>("classificacaoGrupo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ClassificacaoGrupo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClassificacaoImpostoType>>("classificacaoImposto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ClassificacaoImposto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClassificacaoIndustriaType>>("classificacaoIndustria", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ClassificacaoIndustria>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClassificacaoModalidadeCaeType>>("classificacaoModalidadeCae", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ClassificacaoModalidadeCae>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClassificacaoOperacaoType>>("classificacaoOperacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ClassificacaoOperacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClassificacaoParticipanteSinistroType>>("classificacaoParticipanteSinistro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ClassificacaoParticipanteSinistro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClassificacaoReclamacaoType>>("classificacaoReclamacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ClassificacaoReclamacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClassificacaoTipoCasoType>>("classificacaoTipoCaso", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ClassificacaoTipoCaso>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClausulaType>>("clausula", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Clausula>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ClienteType>>("cliente", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Cliente>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CoPagamentoType>>("coPagamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CoPagamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CoSeguroType>>("coSeguro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CoSeguro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CoberturaType>>("cobertura", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Cobertura>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CoberturaCosseguroType>>("coberturaCosseguro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CoberturaCosseguro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CoberturaPlanoType>>("coberturaPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CoberturaPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CoberturaResseguroType>>("coberturaResseguro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CoberturaResseguro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CobradorType>>("cobrador", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Cobrador>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CodigoResponsabilidadeType>>("codigoResponsabilidade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CodigoResponsabilidade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CoeficienteLimiteIndemnizacaoPartoType>>("coeficienteLimiteIndemnizacaoParto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CoeficienteLimiteIndemnizacaoParto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CoeficienteLimiteIndemnizacaoProteseOrtesesType>>("coeficienteLimiteIndemnizacaoProteseOrteses", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CoeficienteLimiteIndemnizacaoProteseOrteses>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CoeficientePremioAdesaoType>>("coeficientePremioAdesao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CoeficientePremioAdesao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CoeficientePremioDoencasPreExistentesType>>("coeficientePremioDoencasPreExistentes", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CoeficientePremioDoencasPreExistentes>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CoeficientePremioLimiteIndemnizacaoType>>("coeficientePremioLimiteIndemnizacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CoeficientePremioLimiteIndemnizacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CoeficientePremioPessoasType>>("coeficientePremioPessoas", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CoeficientePremioPessoas>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CofreType>>("cofre", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Cofre>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CombustivelType>>("combustivel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Combustivel>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ComissaoType>>("comissao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Comissao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ComissaoPlanoType>>("comissaoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ComissaoPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ComissaoSelecionadaType>>("comissaoSelecionada", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ComissaoSelecionada>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ComissionamentoType>>("comissionamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Comissionamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ComissionamentoPlanoType>>("comissionamentoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ComissionamentoPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ComiteType>>("comite", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Comite>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CompanhiaViagemType>>("companhiaViagem", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CompanhiaViagem>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CompetenciaAreaType>>("competenciaArea", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CompetenciaArea>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ComponenteSalarialPessoaType>>("componenteSalarialPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ComponenteSalarialPessoa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ComunaType>>("comuna", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Comuna>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CondicaoAgravamentoType>>("condicaoAgravamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CondicaoAgravamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CondicaoAplicacaoAgravamentoType>>("condicaoAplicacaoAgravamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CondicaoAplicacaoAgravamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CondicaoAplicacaoTarifaType>>("condicaoAplicacaoTarifa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CondicaoAplicacaoTarifa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CondicaoOperacaoType>>("condicaoOperacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CondicaoOperacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CondicaoTarifaType>>("condicaoTarifa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CondicaoTarifa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CondicoesType>>("condicoes", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Condicoes>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CondicoesApoliceType>>("condicoesApolice", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CondicoesApolice>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CondicoesCoSeguroType>>("condicoesCoSeguro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CondicoesCoSeguro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CondicoesProdutoType>>("condicoesProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CondicoesProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CondicoesReSeguroType>>("condicoesReSeguro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CondicoesReSeguro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ConstrucaoType>>("construcao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Construcao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ConsumoPlafondType>>("consumoPlafond", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ConsumoPlafond>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ContaBancariaPosType>>("contaBancariaPos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ContaBancariaPos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ContaFinanceiraType>>("contaFinanceira", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ContaFinanceira>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ContactoType>>("contacto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Contacto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ContactoEmpresaType>>("contactoEmpresa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ContactoEmpresa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ContactoPessoaType>>("contactoPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ContactoPessoa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ContadoresRegistosType>>("contadoresRegistos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ContadoresRegistos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ContinenteType>>("continente", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Continente>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ContinentePlanoType>>("continentePlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ContinentePlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ContratoType>>("contrato", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Contrato>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ContratoPrestadorEmpresaType>>("contratoPrestadorEmpresa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ContratoPrestadorEmpresa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CorType>>("cor", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Cor>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CotacaoType>>("cotacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Cotacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CriterioComissionamentoType>>("criterioComissionamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CriterioComissionamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CriterioPlanoType>>("criterioPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CriterioPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CrossSellingType>>("crossSelling", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CrossSelling>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CrossSellingRateType>>("crossSellingRate", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CrossSellingRate>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CursosType>>("cursos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Cursos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<CustoType>>("custo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Custo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DeficienciaType>>("deficiencia", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Deficiencia>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DenunciaType>>("denuncia", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Denuncia>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DepartamentoType>>("departamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Departamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DependenteType>>("dependente", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Dependente>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DescontoApoliceGrupoType>>("descontoApoliceGrupo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DescontoApoliceGrupo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DescontoFranquiaType>>("descontoFranquia", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DescontoFranquia>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DescontoFranquiaMedicamentoType>>("descontoFranquiaMedicamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DescontoFranquiaMedicamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DescontoPessoaType>>("descontoPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DescontoPessoa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DescontoPessoaPlanoType>>("descontoPessoaPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DescontoPessoaPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DescontoSeleccionadoType>>("descontoSeleccionado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DescontoSeleccionado>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DescricaoBeneficioCoberturaType>>("descricaoBeneficioCobertura", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DescricaoBeneficioCobertura>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DescricaoTratamentoDentarioType>>("descricaoTratamentoDentario", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DescricaoTratamentoDentario>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DespesaType>>("despesa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Despesa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DespesaLinhaType>>("despesaLinha", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DespesaLinha>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DespesaPlanoType>>("despesaPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DespesaPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DespesaSeleccionadaType>>("despesaSeleccionada", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DespesaSeleccionada>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DestaquesPaginaType>>("destaquesPagina", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DestaquesPagina>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DesvalorizacaoInvalidezPermanenteType>>("desvalorizacaoInvalidezPermanente", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DesvalorizacaoInvalidezPermanente>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DetalhePlanoType>>("detalhePlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DetalhePlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DiasContagemType>>("diasContagem", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DiasContagem>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DimensaoConstrucaoType>>("dimensaoConstrucao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DimensaoConstrucao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DimensaoEmpresaType>>("dimensaoEmpresa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DimensaoEmpresa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DireccaoType>>("direccao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Direccao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DirectorDireccaoType>>("directorDireccao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DirectorDireccao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DistritoType>>("distrito", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Distrito>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DocumentoIdentificacaoType>>("documentoIdentificacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DocumentoIdentificacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DocumentoMembroAsseguradoType>>("documentoMembroAssegurado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DocumentoMembroAssegurado>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DocumentosAnexosApoliceType>>("documentosAnexosApolice", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DocumentosAnexosApolice>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DocumentosCoberturasType>>("documentosCoberturas", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DocumentosCoberturas>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DocumentosLesadoType>>("documentosLesado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DocumentosLesado>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DocumentosLinhaType>>("documentosLinha", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DocumentosLinha>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DocumentosNecessarioPorLinhaType>>("documentosNecessarioPorLinha", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DocumentosNecessarioPorLinha>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DocumentosObjectoEnvolvidoType>>("documentosObjectoEnvolvido", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DocumentosObjectoEnvolvido>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DocumentosObrigatorioPlanoType>>("documentosObrigatorioPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DocumentosObrigatorioPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DocumentosObrigatorioProdutoType>>("documentosObrigatorioProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DocumentosObrigatorioProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DocumentosTestemunhaType>>("documentosTestemunha", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DocumentosTestemunha>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DuracaoTipoContratoType>>("duracaoTipoContrato", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DuracaoTipoContrato>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<DuracaoTipoContratoPlanoType>>("duracaoTipoContratoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DuracaoTipoContratoPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<EmissoraDocumentosType>>("emissoraDocumentos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<EmissoraDocumentos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<EmpresaType>>("empresa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Empresa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<EncargosType>>("encargos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Encargos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<EnderecoType>>("endereco", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Endereco>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<EnderecoPessoaType>>("enderecoPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<EnderecoPessoa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<EnderecoPlanoType>>("enderecoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<EnderecoPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<EntidadeEmpregadoraType>>("entidadeEmpregadora", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<EntidadeEmpregadora>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<EspecieAnimaisType>>("especieAnimais", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<EspecieAnimais>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<EstadoCivilType>>("estadoCivil", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<EstadoCivil>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<EstadoCivilPlanoType>>("estadoCivilPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<EstadoCivilPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ExcedenteType>>("excedente", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Excedente>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ExcessoPerdaType>>("excessoPerda", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ExcessoPerda>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ExclusoesType>>("exclusoes", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Exclusoes>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ExclusoesPlanoType>>("exclusoesPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ExclusoesPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ExclusoesSelecionadaApoliceType>>("exclusoesSelecionadaApolice", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ExclusoesSelecionadaApolice>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ExclusoesSelecionadaLinhaProdutoType>>("exclusoesSelecionadaLinhaProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ExclusoesSelecionadaLinhaProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ExclusoesSelecionadaPlanoType>>("exclusoesSelecionadaPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ExclusoesSelecionadaPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ExemplarModeloAutomovelType>>("exemplarModeloAutomovel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ExemplarModeloAutomovel>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ExercicioType>>("exercicio", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Exercicio>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ExportacoesProdutosInstalacoesType>>("exportacoesProdutosInstalacoes", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ExportacoesProdutosInstalacoes>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FactorRiscoType>>("factorRisco", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FactorRisco>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FaculdadeType>>("faculdade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Faculdade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FaculdadeCursoType>>("faculdadeCurso", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FaculdadeCurso>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FacultativoResseguroType>>("facultativoResseguro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FacultativoResseguro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FaixaEtariaType>>("faixaEtaria", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FaixaEtaria>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FaseDocumentosObrigatorioType>>("faseDocumentosObrigatorio", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FaseDocumentosObrigatorio>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FeriadoType>>("feriado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Feriado>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FidelizacaoType>>("fidelizacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Fidelizacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FidelizacaoComissionamentoType>>("fidelizacaoComissionamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FidelizacaoComissionamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FidelizacaoPlanoType>>("fidelizacaoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FidelizacaoPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FiliacaoType>>("filiacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Filiacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FinalidadeApoliceType>>("finalidadeApolice", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FinalidadeApolice>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FormaContratacaoType>>("formaContratacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FormaContratacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FormaContratacaoPlanoType>>("formaContratacaoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FormaContratacaoPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FormaEntregaType>>("formaEntrega", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FormaEntrega>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FormaLiquidacaoPremioType>>("formaLiquidacaoPremio", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FormaLiquidacaoPremio>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FormaLiquidacaoPremioPlanoType>>("formaLiquidacaoPremioPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FormaLiquidacaoPremioPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FormaMovimentoContaFinanceiraType>>("formaMovimentoContaFinanceira", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FormaMovimentoContaFinanceira>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FormaPagamentoType>>("formaPagamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FormaPagamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FormaPagamentoPlanoType>>("formaPagamentoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FormaPagamentoPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FormaReparacaoType>>("formaReparacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FormaReparacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FormaResseguroType>>("formaResseguro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FormaResseguro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FormaTerminoType>>("formaTermino", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FormaTermino>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FormasCobrancaType>>("formasCobranca", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FormasCobranca>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FornecedorType>>("fornecedor", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Fornecedor>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FotografiasObjectoEnvolvidoType>>("fotografiasObjectoEnvolvido", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FotografiasObjectoEnvolvido>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FraccionamentoType>>("fraccionamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Fraccionamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FraccionamentoPlanoType>>("fraccionamentoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FraccionamentoPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FranquiaInvalidezTemporariaType>>("franquiaInvalidezTemporaria", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FranquiaInvalidezTemporaria>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FranquiaSeleccionadoType>>("franquiaSeleccionado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FranquiaSeleccionado>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FuncaoType>>("funcao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Funcao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FuncionalidadeType>>("funcionalidade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Funcionalidade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FuncionarioType>>("funcionario", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Funcionario>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<FuncionarioInstalacoesType>>("funcionarioInstalacoes", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FuncionarioInstalacoes>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<GarantiaPlanoType>>("garantiaPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<GarantiaPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<GarantiasAfetasDespesasMedicasType>>("garantiasAfetasDespesasMedicas", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<GarantiasAfetasDespesasMedicas>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<GarantiasCoberturaType>>("garantiasCobertura", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<GarantiasCobertura>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<GarantiasContratadasType>>("garantiasContratadas", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<GarantiasContratadas>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<GlossarioType>>("glossario", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Glossario>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<GpsautomovelType>>("gpsautomovel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Gpsautomovel>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<GrauParentescoType>>("grauParentesco", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<GrauParentesco>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<GrupoImpostoType>>("grupoImposto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<GrupoImposto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<GrupoPessoasType>>("grupoPessoas", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<GrupoPessoas>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<HabilitacoesLiterariasType>>("habilitacoesLiterarias", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<HabilitacoesLiterarias>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<HabilitacoesLiterariasPessoaType>>("habilitacoesLiterariasPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<HabilitacoesLiterariasPessoa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<HablitacoesLiterariasPlanoType>>("hablitacoesLiterariasPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<HablitacoesLiterariasPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<HistoricoContadoresRegistosType>>("historicoContadoresRegistos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<HistoricoContadoresRegistos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<HistoricoPadraoType>>("historicoPadrao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<HistoricoPadrao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<HistoricoPrecarioProdutoType>>("historicoPrecarioProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<HistoricoPrecarioProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<IdiomaPessoaType>>("idiomaPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<IdiomaPessoa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<IdiomasType>>("idiomas", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Idiomas>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ImagemProdutoType>>("imagemProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ImagemProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ImagensConstrucaoType>>("imagensConstrucao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ImagensConstrucao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ImpostoType>>("imposto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Imposto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ImpostoLinhaType>>("impostoLinha", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ImpostoLinha>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ImpostoPrecarioType>>("impostoPrecario", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ImpostoPrecario>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ImpostoTipoDocumentosType>>("impostoTipoDocumentos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ImpostoTipoDocumentos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<IncapacidadePessoaType>>("incapacidadePessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<IncapacidadePessoa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<IncapacidadeTemporariaType>>("incapacidadeTemporaria", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<IncapacidadeTemporaria>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<IndeminizacaoType>>("indeminizacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Indeminizacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<IndexadorType>>("indexador", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Indexador>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<IndiceCargaPneuType>>("indiceCargaPneu", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<IndiceCargaPneu>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<IndiceVelocidadePneuType>>("indiceVelocidadePneu", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<IndiceVelocidadePneu>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<InformacaoAdicionalType>>("informacaoAdicional", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<InformacaoAdicional>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<InformacaoBancariaType>>("informacaoBancaria", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<InformacaoBancaria>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<InformacaoBancariaPosType>>("informacaoBancariaPos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<InformacaoBancariaPos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<InformacaoSuporteType>>("informacaoSuporte", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<InformacaoSuporte>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<InformacoesAdicionaisProdutoType>>("informacoesAdicionaisProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<InformacoesAdicionaisProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<InfraccoesType>>("infraccoes", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Infraccoes>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<InstalacoesType>>("instalacoes", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Instalacoes>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<InstitutoSuperiorType>>("institutoSuperior", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<InstitutoSuperior>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<IntervaloRecorrenciaType>>("intervaloRecorrencia", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<IntervaloRecorrencia>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ItensExclusaoType>>("itensExclusao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ItensExclusao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ItensPerguntaType>>("itensPergunta", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ItensPergunta>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<JustificacaoType>>("justificacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Justificacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LadoVolanteType>>("ladoVolante", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LadoVolante>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LeadType>>("lead", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Lead>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LembreteType>>("lembrete", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Lembrete>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LesadoType>>("lesado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Lesado>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LesaoLesadoType>>("lesaoLesado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LesaoLesado>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LicencaModuloType>>("licencaModulo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LicencaModulo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LimiteCoberturaType>>("limiteCobertura", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LimiteCobertura>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LimiteComissionamentoPlanoType>>("limiteComissionamentoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LimiteComissionamentoPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LimiteCompetenciaType>>("limiteCompetencia", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LimiteCompetencia>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LimiteGarantiaResponsabilidadeCivilType>>("limiteGarantiaResponsabilidadeCivil", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LimiteGarantiaResponsabilidadeCivil>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LimiteResponsabilidadeType>>("limiteResponsabilidade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LimiteResponsabilidade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LimiteResponsablidadeCivilAutomovelType>>("limiteResponsablidadeCivilAutomovel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LimiteResponsablidadeCivilAutomovel>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LimitesAceitacaoType>>("limitesAceitacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LimitesAceitacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LimitesComissionamentoType>>("limitesComissionamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LimitesComissionamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LimitesRapelType>>("limitesRapel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LimitesRapel>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LinhaProdutoType>>("linhaProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LinhaProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LinhaProdutoImpostoType>>("linhaProdutoImposto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LinhaProdutoImposto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ListaNegraType>>("listaNegra", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ListaNegra>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LocaisCoberturaType>>("locaisCobertura", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LocaisCobertura>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LocaisComissaoType>>("locaisComissao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LocaisComissao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LocaisDescontoType>>("locaisDesconto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LocaisDesconto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LocaisEncargoType>>("locaisEncargo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LocaisEncargo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LocaisFranquiaType>>("locaisFranquia", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LocaisFranquia>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LocaisImpostoType>>("locaisImposto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LocaisImposto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LocaisLimiteCompetenciaType>>("locaisLimiteCompetencia", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LocaisLimiteCompetencia>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LocaisObjectivosComerciaisType>>("locaisObjectivosComerciais", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LocaisObjectivosComerciais>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LocaisOfertaType>>("locaisOferta", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LocaisOferta>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LocalConsultaType>>("localConsulta", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LocalConsulta>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LocalTrabalhoType>>("localTrabalho", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LocalTrabalho>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LocalTrabalhoPessoaType>>("localTrabalhoPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LocalTrabalhoPessoa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LocalidadeAntenaType>>("localidadeAntena", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LocalidadeAntena>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LocalizacaoInstalacoesType>>("localizacaoInstalacoes", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LocalizacaoInstalacoes>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LocalizacaoPneuType>>("localizacaoPneu", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LocalizacaoPneu>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<LugaresAutoAssegurarType>>("lugaresAutoAssegurar", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LugaresAutoAssegurar>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MarcaAutomovelType>>("marcaAutomovel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<MarcaAutomovel>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MarcaGpsType>>("marcaGps", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<MarcaGps>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MargemVendaProdutoType>>("margemVendaProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<MargemVendaProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MargemVendaSeleccionadoType>>("margemVendaSeleccionado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<MargemVendaSeleccionado>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MediacaoComissaoType>>("mediacaoComissao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<MediacaoComissao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MedicamentosPrestadoresType>>("medicamentosPrestadores", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<MedicamentosPrestadores>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MedicoType>>("medico", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Medico>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MeioAutorizacaoType>>("meioAutorizacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<MeioAutorizacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MeioTransporteType>>("meioTransporte", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<MeioTransporte>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MembroAsseguradoType>>("membroAssegurado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<MembroAssegurado>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MembroCadType>>("membroCad", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<MembroCad>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MembrosGrupoType>>("membrosGrupo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<MembrosGrupo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MenuType>>("menu", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Menu>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MesesType>>("meses", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Meses>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MetodoSistemaAquecimentoType>>("metodoSistemaAquecimento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<MetodoSistemaAquecimento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MetricaKpiType>>("metricaKpi", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<MetricaKpi>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ModalidadeAssegurarType>>("modalidadeAssegurar", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ModalidadeAssegurar>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ModalidadeAtrasoViagemType>>("modalidadeAtrasoViagem", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ModalidadeAtrasoViagem>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ModalidadeContratoNaoProporcionalType>>("modalidadeContratoNaoProporcional", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ModalidadeContratoNaoProporcional>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ModalidadeContratoProporcionalType>>("modalidadeContratoProporcional", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ModalidadeContratoProporcional>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ModalidadeReembolsoType>>("modalidadeReembolso", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ModalidadeReembolso>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ModalidadeSeguroType>>("modalidadeSeguro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ModalidadeSeguro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ModalidadesRcselecionadasType>>("modalidadesRcselecionadas", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ModalidadesRcselecionadas>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ModalidadesResponsabilidadeCivilType>>("modalidadesResponsabilidadeCivil", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ModalidadesResponsabilidadeCivil>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ModeloAutomovelType>>("modeloAutomovel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ModeloAutomovel>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ModeloGpsType>>("modeloGps", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ModeloGps>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ModeloMapaType>>("modeloMapa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ModeloMapa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ModificacaoType>>("modificacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Modificacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ModuloCoreType>>("moduloCore", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ModuloCore>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ModuloCoreDireccaoType>>("moduloCoreDireccao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ModuloCoreDireccao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MoedaType>>("moeda", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Moeda>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MoradaType>>("morada", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Morada>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MotivoViagemType>>("motivoViagem", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<MotivoViagem>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MotoristaType>>("motorista", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Motorista>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MotoristaAutomovelType>>("motoristaAutomovel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<MotoristaAutomovel>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<MunicipioType>>("municipio", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Municipio>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<NacionalidadePessoaType>>("nacionalidadePessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<NacionalidadePessoa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<NacionalidadePessoaPlanoType>>("nacionalidadePessoaPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<NacionalidadePessoaPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<NaturezaMovimentoType>>("naturezaMovimento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<NaturezaMovimento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<NewsletterType>>("newsletter", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Newsletter>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<NivelAbrangenciaType>>("nivelAbrangencia", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<NivelAbrangencia>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<NivelAcessoType>>("nivelAcesso", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<NivelAcesso>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<NivelCompetenciaType>>("nivelCompetencia", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<NivelCompetencia>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<NivelDesempenhoType>>("nivelDesempenho", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<NivelDesempenho>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<NivelRiscoType>>("nivelRisco", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<NivelRisco>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<NivelRiscoCoberturaType>>("nivelRiscoCobertura", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<NivelRiscoCobertura>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<NotaType>>("nota", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Nota>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<NumeroPessoasAbrangivelType>>("numeroPessoasAbrangivel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<NumeroPessoasAbrangivel>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ObjectivoPlanoType>>("objectivoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ObjectivoPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ObjectivoProdutoType>>("objectivoProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ObjectivoProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ObjectivosAreaType>>("objectivosArea", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ObjectivosArea>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ObjectivosComerciaisType>>("objectivosComerciais", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ObjectivosComerciais>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ObjectoEnvolvidoType>>("objectoEnvolvido", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ObjectoEnvolvido>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ObjectoSeguradoType>>("objectoSegurado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ObjectoSegurado>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ObjectoTrabalhoType>>("objectoTrabalho", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ObjectoTrabalho>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ObjectoTrabalhoPessoaType>>("objectoTrabalhoPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ObjectoTrabalhoPessoa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ObrigacoesProdutoType>>("obrigacoesProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ObrigacoesProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ObservacoesBoletimAdesaoType>>("observacoesBoletimAdesao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ObservacoesBoletimAdesao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<OfertaLinhaType>>("ofertaLinha", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<OfertaLinha>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<OfertaPlanoType>>("ofertaPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<OfertaPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<OpcaoType>>("opcao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Opcao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<OperacaoType>>("operacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Operacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<OperaccoesPagamentoType>>("operaccoesPagamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<OperaccoesPagamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<OperacoesCrudType>>("operacoesCrud", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<OperacoesCrud>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<OperacoesCrudpessoaType>>("operacoesCrudpessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<OperacoesCrudpessoa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<OperacoesPagamentoType>>("operacoesPagamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<OperacoesPagamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<OperacoesRecebimentoType>>("operacoesRecebimento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<OperacoesRecebimento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<OrgaoRegularizadorType>>("orgaoRegularizador", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<OrgaoRegularizador>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<OrigemFabricoEmbalagemType>>("origemFabricoEmbalagem", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<OrigemFabricoEmbalagem>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<OutraSeguradoraContratoType>>("outraSeguradoraContrato", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<OutraSeguradoraContrato>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<OutrasInformacoesSinistroType>>("outrasInformacoesSinistro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<OutrasInformacoesSinistro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<OutrosSegurosType>>("outrosSeguros", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<OutrosSeguros>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PacienteType>>("paciente", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Paciente>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PadraoRecorrenciaType>>("padraoRecorrencia", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PadraoRecorrencia>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PaisType>>("pais", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Pais>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PapelType>>("papel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Papel>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PapelModuloFuncionalidadeType>>("papelModuloFuncionalidade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PapelModuloFuncionalidade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PapelModuloPessoaType>>("papelModuloPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PapelModuloPessoa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PapelPessoaType>>("papelPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PapelPessoa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PapelPlanoType>>("papelPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PapelPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PerdaType>>("perda", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Perda>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PerfilDesenvolvimentoType>>("perfilDesenvolvimento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PerfilDesenvolvimento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PerfilDesenvolvimentoPessoaType>>("perfilDesenvolvimentoPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PerfilDesenvolvimentoPessoa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PerguntasType>>("perguntas", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Perguntas>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PerguntasFrequentesEmpresaType>>("perguntasFrequentesEmpresa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PerguntasFrequentesEmpresa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PerguntasFrequentesProdutoType>>("perguntasFrequentesProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PerguntasFrequentesProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PeriodoType>>("periodo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Periodo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PeriodoAnualImpostoType>>("periodoAnualImposto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PeriodoAnualImposto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PeriodoCalculoType>>("periodoCalculo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PeriodoCalculo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PeriodoCoberturaProdutoType>>("periodoCoberturaProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PeriodoCoberturaProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PeriodoPlanoType>>("periodoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PeriodoPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PeriodoPlanoPlanoType>>("periodoPlanoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PeriodoPlanoPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PerspicaciaType>>("perspicacia", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Perspicacia>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PesoAutomovelType>>("pesoAutomovel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PesoAutomovel>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PessoaType>>("pessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Pessoa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PessoaProfissaoType>>("pessoaProfissao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PessoaProfissao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PessoaTarefaType>>("pessoaTarefa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PessoaTarefa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PessoasAbrangidasType>>("pessoasAbrangidas", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PessoasAbrangidas>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PessoasPolitamenteExpostasType>>("pessoasPolitamenteExpostas", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PessoasPolitamenteExpostas>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PessoasPosType>>("pessoasPos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PessoasPos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PlanoComercialPorProdutorType>>("planoComercialPorProdutor", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PlanoComercialPorProdutor>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PlanoComissionamentoProdutorType>>("planoComissionamentoProdutor", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PlanoComissionamentoProdutor>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PlanoContasType>>("planoContas", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PlanoContas>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PlanoObjectivoComercialType>>("planoObjectivoComercial", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PlanoObjectivoComercial>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PlanoProdutoType>>("planoProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PlanoProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PneuType>>("pneu", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Pneu>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PontosClausulaType>>("pontosClausula", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PontosClausula>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PortfolioProdutoType>>("portfolioProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PortfolioProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PosType>>("pos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Pos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PrazosType>>("prazos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Prazos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PrazosCurtosType>>("prazosCurtos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PrazosCurtos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PrecarioProdutoType>>("precarioProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PrecarioProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PrecosAtosMedicosType>>("precosAtosMedicos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PrecosAtosMedicos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PrecosProdutosFarmaceuticosType>>("precosProdutosFarmaceuticos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PrecosProdutosFarmaceuticos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PrejuizoSofridoVeiculoTerceiroType>>("prejuizoSofridoVeiculoTerceiro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PrejuizoSofridoVeiculoTerceiro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PremiosType>>("premios", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Premios>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PremiosExploracaoRuralType>>("premiosExploracaoRural", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PremiosExploracaoRural>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PremiosMercadoriasNaoOrdinariasType>>("premiosMercadoriasNaoOrdinarias", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PremiosMercadoriasNaoOrdinarias>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PremiosMinimosType>>("premiosMinimos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PremiosMinimos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PremiosProfissoesAgravamentoType>>("premiosProfissoesAgravamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PremiosProfissoesAgravamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PremiosRiscosSimplesType>>("premiosRiscosSimples", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PremiosRiscosSimples>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PremiosRiscosSimplesOrdinariosType>>("premiosRiscosSimplesOrdinarios", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PremiosRiscosSimplesOrdinarios>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PressupostoAcidentePessoalType>>("pressupostoAcidentePessoal", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PressupostoAcidentePessoal>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PrestacoesFraccionamentoType>>("prestacoesFraccionamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PrestacoesFraccionamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PrestadorType>>("prestador", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Prestador>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PrestadorServicoType>>("prestadorServico", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PrestadorServico>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PrioridadeType>>("prioridade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Prioridade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<PrioridadeTarefaType>>("prioridadeTarefa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PrioridadeTarefa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ProcessoType>>("processo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Processo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ProcessoFuncionalidadeType>>("processoFuncionalidade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ProcessoFuncionalidade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ProdutoType>>("produto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Produto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ProdutosEmpresaType>>("produtosEmpresa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ProdutosEmpresa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ProdutosFarmaceuticosType>>("produtosFarmaceuticos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ProdutosFarmaceuticos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ProdutosInstalacoesType>>("produtosInstalacoes", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ProdutosInstalacoes>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ProdutosPrestadoresType>>("produtosPrestadores", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ProdutosPrestadores>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ProfissaoType>>("profissao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Profissao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ProfissaoPlanoType>>("profissaoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ProfissaoPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ProvinciaType>>("provincia", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Provincia>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ProvinciaComissionamentoType>>("provinciaComissionamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ProvinciaComissionamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ProvinciaPlanoType>>("provinciaPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ProvinciaPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<QuadroDanosType>>("quadroDanos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<QuadroDanos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<QualidadeProponenteType>>("qualidadeProponente", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<QualidadeProponente>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<QualidadeSeguraType>>("qualidadeSegura", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<QualidadeSegura>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<QuestionarioType>>("questionario", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Questionario>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<RapelProdutorType>>("rapelProdutor", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<RapelProdutor>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ReciboType>>("recibo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Recibo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ReclamacaoType>>("reclamacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Reclamacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<RecorrenciaDiarioType>>("recorrenciaDiario", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<RecorrenciaDiario>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<RecorrenciaMesAnoType>>("recorrenciaMesAno", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<RecorrenciaMesAno>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<RecorrenciaSemanalType>>("recorrenciaSemanal", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<RecorrenciaSemanal>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<RedeSociaisType>>("redeSociais", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<RedeSociais>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ReducaoPremioAcidentesTrabalhoType>>("reducaoPremioAcidentesTrabalho", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ReducaoPremioAcidentesTrabalho>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ReducoesAutorizadasType>>("reducoesAutorizadas", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ReducoesAutorizadas>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ReembolsoDespesasMedicasType>>("reembolsoDespesasMedicas", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ReembolsoDespesasMedicas>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ReembolsoTratamentoDentarioType>>("reembolsoTratamentoDentario", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ReembolsoTratamentoDentario>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<RegiaoType>>("regiao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Regiao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ReivindicacoesFeitasApoliceType>>("reivindicacoesFeitasApolice", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ReivindicacoesFeitasApolice>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<RelatorioLinksType>>("relatorioLinks", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<RelatorioLinks>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<RelatorioPoliciaType>>("relatorioPolicia", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<RelatorioPolicia>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<RendimentoPessoaType>>("rendimentoPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<RendimentoPessoa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<RendimentosPessoaType>>("rendimentosPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<RendimentosPessoa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<RenovacaoApoliceType>>("renovacaoApolice", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<RenovacaoApolice>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ReparacaoType>>("reparacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Reparacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ReservasTecnicasType>>("reservasTecnicas", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ReservasTecnicas>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ResponsabilizadoType>>("responsabilizado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Responsabilizado>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ResponsavelBalcaoType>>("responsavelBalcao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ResponsavelBalcao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ResponsavelObrigacoesType>>("responsavelObrigacoes", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ResponsavelObrigacoes>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<RespostaPerguntaType>>("respostaPergunta", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<RespostaPergunta>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<RestricoesCategoriasCartaConducaoType>>("restricoesCategoriasCartaConducao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<RestricoesCategoriasCartaConducao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<RestricoesPessoaisCartaConducaoType>>("restricoesPessoaisCartaConducao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<RestricoesPessoaisCartaConducao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<RestricoesViaturaCartaConducaoType>>("restricoesViaturaCartaConducao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<RestricoesViaturaCartaConducao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<RiscoType>>("risco", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Risco>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<RiscoOutraSeguradoraContratoType>>("riscoOutraSeguradoraContrato", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<RiscoOutraSeguradoraContrato>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<RiscoPlanoProdutoType>>("riscoPlanoProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<RiscoPlanoProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<RiscosExcluidosType>>("riscosExcluidos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<RiscosExcluidos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<RuaType>>("rua", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Rua>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SaldoType>>("saldo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Saldo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ScoringType>>("scoring", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Scoring>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SeccaoType>>("seccao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Seccao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SectorType>>("sector", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Sector>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SectorActividadeType>>("sectorActividade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SectorActividade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SectorActividadePlanoType>>("sectorActividadePlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SectorActividadePlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SectorActividadesProdutorType>>("sectorActividadesProdutor", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SectorActividadesProdutor>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SectorAtividadeEconomicaType>>("sectorAtividadeEconomica", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SectorAtividadeEconomica>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SegmentoComissionamentoProdutorType>>("segmentoComissionamentoProdutor", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SegmentoComissionamentoProdutor>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SegmentoFranquiaType>>("segmentoFranquia", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SegmentoFranquia>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SegmentoObjectivosComerciaisType>>("segmentoObjectivosComerciais", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SegmentoObjectivosComerciais>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SegmentoOfertaType>>("segmentoOferta", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SegmentoOferta>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SegmentoProdutoType>>("segmentoProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SegmentoProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SegmentoProdutoPlanoType>>("segmentoProdutoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SegmentoProdutoPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SegmentoTipoCoberturaType>>("segmentoTipoCobertura", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SegmentoTipoCobertura>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SeguradoType>>("segurado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Segurado>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ServicoType>>("servico", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Servico>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ServicosAdicionaisType>>("servicosAdicionais", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ServicosAdicionais>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ServicosBaseType>>("servicosBase", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ServicosBase>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SessaoImpostoType>>("sessaoImposto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SessaoImposto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SexoType>>("sexo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Sexo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SexoPlanoType>>("sexoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SexoPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SimulacaoType>>("simulacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Simulacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SimulacaoDependenteType>>("simulacaoDependente", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SimulacaoDependente>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SinistradoType>>("sinistrado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Sinistrado>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SinistroType>>("sinistro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Sinistro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SistemaAquecimentoType>>("sistemaAquecimento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SistemaAquecimento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SistemaLiquidacaoSinistroType>>("sistemaLiquidacaoSinistro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SistemaLiquidacaoSinistro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SituacaoEmpregoType>>("situacaoEmprego", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SituacaoEmprego>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SlideType>>("slide", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Slide>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SobrePremioCoberturaAdicionalType>>("sobrePremioCoberturaAdicional", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SobrePremioCoberturaAdicional>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SubCategoriaItensType>>("subCategoriaItens", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SubCategoriaItens>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SubClasseModalidadeSeguroType>>("subClasseModalidadeSeguro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SubClasseModalidadeSeguro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SubClausulasPontosType>>("subClausulasPontos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SubClausulasPontos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SubFormaResseguroType>>("subFormaResseguro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SubFormaResseguro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SubFormaResseguroInformacaoType>>("subFormaResseguroInformacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SubFormaResseguroInformacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SubPontoAmbitoType>>("subPontoAmbito", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SubPontoAmbito>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SubPontosClausulaType>>("subPontosClausula", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SubPontosClausula>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SubRamoType>>("subRamo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SubRamo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SubRiscoType>>("subRisco", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SubRisco>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SubSectorType>>("subSector", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SubSector>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SubTarefaType>>("subTarefa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SubTarefa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SubTipoContaType>>("subTipoConta", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SubTipoConta>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SubTipoDeRecebimentoType>>("subTipoDeRecebimento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SubTipoDeRecebimento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SubTipoDesvalorizacaoType>>("subTipoDesvalorizacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SubTipoDesvalorizacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SubTipoPagamentoType>>("subTipoPagamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SubTipoPagamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SubTituloDesvalorizacaoInvalidezPermanenteType>>("subTituloDesvalorizacaoInvalidezPermanente", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SubTituloDesvalorizacaoInvalidezPermanente>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SubscricaoCessaoRetencaoType>>("subscricaoCessaoRetencao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SubscricaoCessaoRetencao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<SugestaoType>>("sugestao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Sugestao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            //FieldAsync<ListGraphType<SysAuditoriaType>>("sysAuditoria", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SysAuditoria>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            //FieldAsync<ListGraphType<SysEstadoLogType>>("sysEstadoLog", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SysEstadoLog>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            //FieldAsync<ListGraphType<SysLogType>>("sysLog", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SysLog>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TabuaAngm1940Type>>("tabuaAngm1940", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TabuaAngm1940>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TabuaAngv2020PType>>("tabuaAngv2020P", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TabuaAngv2020P>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TarefaType>>("tarefa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Tarefa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TarefaRecorrenteType>>("tarefaRecorrente", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TarefaRecorrente>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TarefaReparacaoType>>("tarefaReparacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TarefaReparacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TarefasAgendamentoType>>("tarefasAgendamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TarefasAgendamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TarifaType>>("tarifa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Tarifa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TarifasAutomovelType>>("tarifasAutomovel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TarifasAutomovel>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TarifasDanosPropriosType>>("tarifasDanosProprios", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TarifasDanosProprios>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TarifasPremioAutoAcidentesTrabalhoType>>("tarifasPremioAutoAcidentesTrabalho", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TarifasPremioAutoAcidentesTrabalho>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TarifasPremioAutoAt2Type>>("tarifasPremioAutoAt2", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TarifasPremioAutoAt2>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TarifasResponsabilidadeCivilType>>("tarifasResponsabilidadeCivil", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TarifasResponsabilidadeCivil>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TaxaPremioFixoIndicNomeType>>("taxaPremioFixoIndicNome", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TaxaPremioFixoIndicNome>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TaxaSinistralidadeType>>("taxaSinistralidade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TaxaSinistralidade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TaxasType>>("taxas", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Taxas>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TerceiroType>>("terceiro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Terceiro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TermoResponsabilidadeType>>("termoResponsabilidade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TermoResponsabilidade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TestemunhaType>>("testemunha", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Testemunha>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoAcompanhamentoType>>("tipoAcompanhamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoAcompanhamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoActividadeType>>("tipoActividade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoActividade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoAdesaoType>>("tipoAdesao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoAdesao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoAgravamentoType>>("tipoAgravamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoAgravamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoApoliceType>>("tipoApolice", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoApolice>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoAprovacaoType>>("tipoAprovacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoAprovacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoAutoridadeType>>("tipoAutoridade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoAutoridade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoCaixaType>>("tipoCaixa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoCaixa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoCartaConducaoType>>("tipoCartaConducao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoCartaConducao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoCartaoType>>("tipoCartao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoCartao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoCartaoPagamentoType>>("tipoCartaoPagamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoCartaoPagamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoCasaType>>("tipoCasa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoCasa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoCasoType>>("tipoCaso", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoCaso>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoCategoriaType>>("tipoCategoria", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoCategoria>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoClasseContaType>>("tipoClasseConta", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoClasseConta>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoClassificacaoModalidadeCaeType>>("tipoClassificacaoModalidadeCae", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoClassificacaoModalidadeCae>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoClienteType>>("tipoCliente", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoCliente>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoCoberturaType>>("tipoCobertura", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoCobertura>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoCofreType>>("tipoCofre", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoCofre>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoComissaoType>>("tipoComissao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoComissao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoComissionamentoResseguroType>>("tipoComissionamentoResseguro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoComissionamentoResseguro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoCondicoesType>>("tipoCondicoes", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoCondicoes>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoConstrucaoPneusType>>("tipoConstrucaoPneus", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoConstrucaoPneus>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoConsultaType>>("tipoConsulta", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoConsulta>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoContaType>>("tipoConta", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoConta>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoContactoType>>("tipoContacto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoContacto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoContratacaoType>>("tipoContratacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoContratacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoContratoType>>("tipoContrato", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoContrato>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoCosseguroType>>("tipoCosseguro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoCosseguro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoDanosType>>("tipoDanos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoDanos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoDeRecebimentoType>>("tipoDeRecebimento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoDeRecebimento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoDescontoType>>("tipoDesconto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoDesconto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoDespesaType>>("tipoDespesa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoDespesa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoDocumentoIdentificacaoType>>("tipoDocumentoIdentificacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoDocumentoIdentificacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoDocumentosType>>("tipoDocumentos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoDocumentos>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoEmbalagemType>>("tipoEmbalagem", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoEmbalagem>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoEmbarcacaoType>>("tipoEmbarcacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoEmbarcacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoEmpresaType>>("tipoEmpresa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoEmpresa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoEncargoType>>("tipoEncargo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoEncargo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoEnderecoType>>("tipoEndereco", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoEndereco>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoEntidadeType>>("tipoEntidade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoEntidade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoEntidadePlanoType>>("tipoEntidadePlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoEntidadePlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoEstabelecimentoComercioType>>("tipoEstabelecimentoComercio", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoEstabelecimentoComercio>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoExclusaoType>>("tipoExclusao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoExclusao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoFacturacaoType>>("tipoFacturacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoFacturacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoFacturamentoType>>("tipoFacturamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoFacturamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoFranquiaType>>("tipoFranquia", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoFranquia>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoGaragemType>>("tipoGaragem", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoGaragem>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoGrupoType>>("tipoGrupo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoGrupo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoImagemProdutoType>>("tipoImagemProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoImagemProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoImpostoType>>("tipoImposto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoImposto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoIncapacidadeType>>("tipoIncapacidade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoIncapacidade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoInfracaoType>>("tipoInfracao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoInfracao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoInstalacaoElectricaType>>("tipoInstalacaoElectrica", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoInstalacaoElectrica>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoInstalacoesType>>("tipoInstalacoes", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoInstalacoes>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoIntervencaoType>>("tipoIntervencao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoIntervencao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoJustificativoCativoType>>("tipoJustificativoCativo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoJustificativoCativo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoLesaoType>>("tipoLesao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoLesao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoLevantamentoMedicamentoType>>("tipoLevantamentoMedicamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoLevantamentoMedicamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoLimiteResponsabilidadeType>>("tipoLimiteResponsabilidade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoLimiteResponsabilidade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoMargemType>>("tipoMargem", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoMargem>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoMaterialConstrucaoType>>("tipoMaterialConstrucao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoMaterialConstrucao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoMatriculaType>>("tipoMatricula", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoMatricula>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoMovimentoType>>("tipoMovimento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoMovimento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoObjectivoComercialType>>("tipoObjectivoComercial", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoObjectivoComercial>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoObjectivoEstrategicoType>>("tipoObjectivoEstrategico", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoObjectivoEstrategico>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoObjectivoProdutoType>>("tipoObjectivoProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoObjectivoProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoObjectoEnvolvidoType>>("tipoObjectoEnvolvido", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoObjectoEnvolvido>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoObrigacoesType>>("tipoObrigacoes", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoObrigacoes>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoOfertaType>>("tipoOferta", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoOferta>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoOperacaoType>>("tipoOperacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoOperacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoOperacaoProcessoType>>("tipoOperacaoProcesso", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoOperacaoProcesso>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoOperacaoProcessoLimiteCompetenciaType>>("tipoOperacaoProcessoLimiteCompetencia", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoOperacaoProcessoLimiteCompetencia>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoOrtesesProtesesType>>("tipoOrtesesProteses", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoOrtesesProteses>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoOucupantesType>>("tipoOucupantes", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoOucupantes>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoPagamentoType>>("tipoPagamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoPagamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoPagamentoMovimentoType>>("tipoPagamentoMovimento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoPagamentoMovimento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoPartoType>>("tipoParto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoParto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoPerdaType>>("tipoPerda", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoPerda>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoPessoaType>>("tipoPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoPessoa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoPessoaPlanoType>>("tipoPessoaPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoPessoaPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoPinturaType>>("tipoPintura", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoPintura>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoPlanoObjectivoType>>("tipoPlanoObjectivo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoPlanoObjectivo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoPortfolioProdutoType>>("tipoPortfolioProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoPortfolioProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoPremioFixoType>>("tipoPremioFixo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoPremioFixo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoProdutorType>>("tipoProdutor", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoProdutor>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoPropriedadeType>>("tipoPropriedade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoPropriedade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoProvisaoType>>("tipoProvisao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoProvisao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoQuadroDanoType>>("tipoQuadroDano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoQuadroDano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoQuestionarioType>>("tipoQuestionario", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoQuestionario>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoRamoSeguroType>>("tipoRamoSeguro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoRamoSeguro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoRecebimentoType>>("tipoRecebimento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoRecebimento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoRecebimentoMovimentoType>>("tipoRecebimentoMovimento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoRecebimentoMovimento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoRedeSociaisType>>("tipoRedeSociais", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoRedeSociais>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoRegimeType>>("tipoRegime", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoRegime>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoRelacaoSeguradoType>>("tipoRelacaoSegurado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoRelacaoSegurado>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoRendimentoType>>("tipoRendimento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoRendimento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoRenovacaoType>>("tipoRenovacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoRenovacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoReseguroType>>("tipoReseguro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoReseguro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoResseguroType>>("tipoResseguro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoResseguro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoRiscoType>>("tipoRisco", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoRisco>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoSalaEspetaculoType>>("tipoSalaEspetaculo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoSalaEspetaculo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoSanguineoType>>("tipoSanguineo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoSanguineo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoSectorType>>("tipoSector", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoSector>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoSegmentoType>>("tipoSegmento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoSegmento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoSegmentoComissionamentoType>>("tipoSegmentoComissionamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoSegmentoComissionamento>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoSeguroGrupoType>>("tipoSeguroGrupo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoSeguroGrupo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoServicoType>>("tipoServico", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoServico>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoSinistroType>>("tipoSinistro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoSinistro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoSociedadeType>>("tipoSociedade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoSociedade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoSubTratadoType>>("tipoSubTratado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoSubTratado>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoSubsidioSalarialType>>("tipoSubsidioSalarial", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoSubsidioSalarial>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoSugestaoType>>("tipoSugestao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoSugestao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoTarefaType>>("tipoTarefa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoTarefa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoTarefaReparacaoType>>("tipoTarefaReparacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoTarefaReparacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoTarifaType>>("tipoTarifa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoTarifa>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoTarifaPlanoProdutoType>>("tipoTarifaPlanoProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoTarifaPlanoProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoTarifasResponsabilidadeType>>("tipoTarifasResponsabilidade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoTarifasResponsabilidade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoTaxasType>>("tipoTaxas", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoTaxas>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoTerminoType>>("tipoTermino", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoTermino>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoTransferenciaType>>("tipoTransferencia", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoTransferencia>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoTratadoReseguroType>>("tipoTratadoReseguro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoTratadoReseguro>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoUsoType>>("tipoUso", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoUso>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TipoViaNotificacaoType>>("tipoViaNotificacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoViaNotificacao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TiposDocumentoProdutoType>>("tiposDocumentoProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TiposDocumentoProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TituloType>>("titulo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Titulo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TituloDesvalorizacaoInvalidezPermanenteType>>("tituloDesvalorizacaoInvalidezPermanente", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TituloDesvalorizacaoInvalidezPermanente>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TransferenciaType>>("transferencia", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Transferencia>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<TransmissaoType>>("transmissao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Transmissao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<UnidadeObjectoSeguradoType>>("unidadeObjectoSegurado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<UnidadeObjectoSegurado>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<UnidadesTempoType>>("unidadesTempo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<UnidadesTempo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ValorCativoType>>("valorCativo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ValorCativo>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ValorCoberturaType>>("valorCobertura", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ValorCobertura>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ValorPadraoType>>("valorPadrao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ValorPadrao>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ValoresCapitalSeguroFamiliarType>>("valoresCapitalSeguroFamiliar", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ValoresCapitalSeguroFamiliar>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ValoresTipoAntenaType>>("valoresTipoAntena", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ValoresTipoAntena>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<VantagemPlanoType>>("vantagemPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<VantagemPlano>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<VantagemProdutoType>>("vantagemProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<VantagemProduto>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<VelocidadeType>>("velocidade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Velocidade>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ViagemType>>("viagem", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Viagem>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ZonaType>>("zona", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Zona>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            FieldAsync<ListGraphType<ZonaPeriodoCoberturaType>>("zonaPeriodoCobertura", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ZonaPeriodoCobertura>(x => x.Where(e => e.HasValue(c.Source.IdEstado)))));
            
        }
    }

    public class EstadoInputType : InputObjectGraphType
	{
		public EstadoInputType()
		{
			// Defining the name of the object
			Name = "estadoInput";
			
            //Field<StringGraphType>("idEstado");
			Field<StringGraphType>("designacao");
			Field<StringGraphType>("codEstado");
			Field<DateTimeGraphType>("dataCriacao");
			Field<DateTimeGraphType>("dataAtualizacao");
			Field<StringGraphType>("ultModificacaoPorId");
			Field<StringGraphType>("obs");
			Field<ListGraphType<AccionistaEmpresaInputType>>("accionistaEmpresa");
			Field<ListGraphType<AcrescimoCapitalMinimoInputType>>("acrescimoCapitalMinimo");
			Field<ListGraphType<AcrescimoPremiosInputType>>("acrescimoPremios");
			Field<ListGraphType<ActividadeInputType>>("actividade");
			Field<ListGraphType<ActividadeContratadaInputType>>("actividadeContratada");
			Field<ListGraphType<ActividadesAgendaInputType>>("actividadesAgenda");
			Field<ListGraphType<AgendaInputType>>("agenda");
			Field<ListGraphType<AgravamentoInputType>>("agravamento");
			Field<ListGraphType<AgravamentoAcidentesTrabalhoInputType>>("agravamentoAcidentesTrabalho");
			Field<ListGraphType<AgravamentoLimiteComparticipacaoInputType>>("agravamentoLimiteComparticipacao");
			Field<ListGraphType<AgravamentoPessoaInputType>>("agravamentoPessoa");
			Field<ListGraphType<AjudaCampoTabelaInputType>>("ajudaCampoTabela");
			Field<ListGraphType<AmbitoInputType>>("ambito");
			Field<ListGraphType<AnexosAutomovelInputType>>("anexosAutomovel");
			Field<ListGraphType<AnexosPessoaInputType>>("anexosPessoa");
			Field<ListGraphType<AnimaisInputType>>("animais");
			Field<ListGraphType<AnosInputType>>("anos");
			Field<ListGraphType<ApoliceInputType>>("apolice");
			Field<ListGraphType<AprovacaoInputType>>("aprovacao");
			Field<ListGraphType<AreaInputType>>("area");
			Field<ListGraphType<ArtigoInputType>>("artigo");
			Field<ListGraphType<AscensoresMontaCargaInputType>>("ascensoresMontaCarga");
			Field<ListGraphType<AssinaturaInputType>>("assinatura");
			Field<ListGraphType<AtosMedicosInputType>>("atosMedicos");
			Field<ListGraphType<AutomovelInputType>>("automovel");
			Field<ListGraphType<AutoridadeSupervisaoInputType>>("autoridadeSupervisao");
			Field<ListGraphType<AutoridadesContactadasInputType>>("autoridadesContactadasCorrespondencia");
			Field<ListGraphType<AutoridadesContactadasInputType>>("autoridadesContactadasEstado");
			Field<ListGraphType<AutorizacaoInputType>>("autorizacao");
			Field<ListGraphType<BairroInputType>>("bairro");
			Field<ListGraphType<BalancoInputType>>("balanco");
			Field<ListGraphType<BalcaoInputType>>("balcao");
			Field<ListGraphType<BalcaoPlanoInputType>>("balcaoPlano");
			Field<ListGraphType<BancoInputType>>("banco");
			Field<ListGraphType<BandeiraPagamentoInputType>>("bandeiraPagamento");
			Field<ListGraphType<BandeiraTipoCartaoInputType>>("bandeiraTipoCartao");
			Field<ListGraphType<BemAfectadoInputType>>("bemAfectado");
			Field<ListGraphType<BemSalvadoInputType>>("bemSalvado");
			Field<ListGraphType<BeneficioCoberturaInputType>>("beneficioCobertura");
			Field<ListGraphType<BoletimAdesaoSaudeInputType>>("boletimAdesaoSaude");
			Field<ListGraphType<BonusInputType>>("bonus");
			Field<ListGraphType<CaeInputType>>("cae");
			Field<ListGraphType<CaePlanoInputType>>("caePlano");
			Field<ListGraphType<CaixaInputType>>("caixa");
			Field<ListGraphType<CambioInputType>>("cambio");
			Field<ListGraphType<CanalInputType>>("canal");
			Field<ListGraphType<CanalComissionamentoInputType>>("canalComissionamento");
			Field<ListGraphType<CanalComissionamentoProdutorInputType>>("canalComissionamentoProdutor");
			Field<ListGraphType<CapitalPremioAutomovelInputType>>("capitalPremioAutomovel");
			Field<ListGraphType<CapitalSeguroAutomovelInputType>>("capitalSeguroAutomovel");
			Field<ListGraphType<CapituloInputType>>("capitulo");
			Field<ListGraphType<CaracteristicaClassificacaoInputType>>("caracteristicaClassificacao");
			Field<ListGraphType<CaracteristicaObjectoInputType>>("caracteristicaObjecto");
			Field<ListGraphType<CaracteristicasConstrucaoInputType>>("caracteristicasConstrucao");
			Field<ListGraphType<CargoPublicoInputType>>("cargoPublico");
			Field<ListGraphType<CartaConducaoInputType>>("cartaConducao");
			Field<ListGraphType<CartaoCreditoInputType>>("cartaoCredito");
			Field<ListGraphType<CartaoPagamentoInputType>>("cartaoPagamento");
			Field<ListGraphType<CarteiraClienteInputType>>("carteiraCliente");
			Field<ListGraphType<CasoClassificacaoInputType>>("casoClassificacao");
			Field<ListGraphType<CategoriaInputType>>("categoria");
			Field<ListGraphType<CategoriaFranquiaInputType>>("categoriaFranquia");
			Field<ListGraphType<CategoriaFuncaoInputType>>("categoriaFuncao");
			Field<ListGraphType<CategoriaGlossarioInputType>>("categoriaGlossario");
			Field<ListGraphType<CategoriaItensInputType>>("categoriaItens");
			Field<ListGraphType<CategoriaJustificacaoInputType>>("categoriaJustificacao");
			Field<ListGraphType<CategoriaLaboralInputType>>("categoriaLaboral");
			Field<ListGraphType<CategoriaMetricaKpiInputType>>("categoriaMetricaKpi");
			Field<ListGraphType<CategoriaSujeitoDanoInputType>>("categoriaSujeitoDano");
			Field<ListGraphType<CategoriaTarefaInputType>>("categoriaTarefa");
			Field<ListGraphType<CategoriasProdutosInstalacoesInputType>>("categoriasProdutosInstalacoes");
			Field<ListGraphType<CausadorSinistroInputType>>("causadorSinistro");
			Field<ListGraphType<CentroCustoInputType>>("centroCusto");
			Field<ListGraphType<CentroResponsabilidadeInputType>>("centroResponsabilidade");
			Field<ListGraphType<ChefeDepartamentoInputType>>("chefeDepartamento");
			Field<ListGraphType<ChefeSeccaoInputType>>("chefeSeccao");
			Field<ListGraphType<ChefeSectorInputType>>("chefeSector");
			Field<ListGraphType<CidadeInputType>>("cidade");
			Field<ListGraphType<CilindragemAutomovelInputType>>("cilindragemAutomovel");
			Field<ListGraphType<CircunstanciaAutomovelInputType>>("circunstanciaAutomovel");
			Field<ListGraphType<CircunstanciaObjectoEnvolvidoInputType>>("circunstanciaObjectoEnvolvido");
			Field<ListGraphType<CircunstanciaPerdaInputType>>("circunstanciaPerda");
			Field<ListGraphType<ClasseCofreInputType>>("classeCofre");
			Field<ListGraphType<ClasseContaInputType>>("classeConta");
			Field<ListGraphType<ClasseModalidadeSeguroInputType>>("classeModalidadeSeguro");
			Field<ListGraphType<ClasseRiscoInputType>>("classeRisco");
			Field<ListGraphType<ClassificacaoInputType>>("classificacao");
			Field<ListGraphType<ClassificacaoAprovacaoInputType>>("classificacaoAprovacao");
			Field<ListGraphType<ClassificacaoAscensoresMontaCargaInputType>>("classificacaoAscensoresMontaCarga");
			Field<ListGraphType<ClassificacaoAutomovelInputType>>("classificacaoAutomovel");
			Field<ListGraphType<ClassificacaoCaixaInputType>>("classificacaoCaixa");
			Field<ListGraphType<ClassificacaoCascoInputType>>("classificacaoCasco");
			Field<ListGraphType<ClassificacaoContaInputType>>("classificacaoConta");
			Field<ListGraphType<ClassificacaoContratoResseguroInputType>>("classificacaoContratoResseguro");
			Field<ListGraphType<ClassificacaoEntidadeInputType>>("classificacaoEntidade");
			Field<ListGraphType<ClassificacaoGrupoInputType>>("classificacaoGrupo");
			Field<ListGraphType<ClassificacaoImpostoInputType>>("classificacaoImposto");
			Field<ListGraphType<ClassificacaoIndustriaInputType>>("classificacaoIndustria");
			Field<ListGraphType<ClassificacaoModalidadeCaeInputType>>("classificacaoModalidadeCae");
			Field<ListGraphType<ClassificacaoOperacaoInputType>>("classificacaoOperacao");
			Field<ListGraphType<ClassificacaoParticipanteSinistroInputType>>("classificacaoParticipanteSinistro");
			Field<ListGraphType<ClassificacaoReclamacaoInputType>>("classificacaoReclamacao");
			Field<ListGraphType<ClassificacaoTipoCasoInputType>>("classificacaoTipoCaso");
			Field<ListGraphType<ClausulaInputType>>("clausula");
			Field<ListGraphType<ClienteInputType>>("cliente");
			Field<ListGraphType<CoPagamentoInputType>>("coPagamento");
			Field<ListGraphType<CoSeguroInputType>>("coSeguro");
			Field<ListGraphType<CoberturaInputType>>("cobertura");
			Field<ListGraphType<CoberturaCosseguroInputType>>("coberturaCosseguro");
			Field<ListGraphType<CoberturaPlanoInputType>>("coberturaPlano");
			Field<ListGraphType<CoberturaResseguroInputType>>("coberturaResseguro");
			Field<ListGraphType<CobradorInputType>>("cobrador");
			Field<ListGraphType<CodigoResponsabilidadeInputType>>("codigoResponsabilidade");
			Field<ListGraphType<CoeficienteLimiteIndemnizacaoPartoInputType>>("coeficienteLimiteIndemnizacaoParto");
			Field<ListGraphType<CoeficienteLimiteIndemnizacaoProteseOrtesesInputType>>("coeficienteLimiteIndemnizacaoProteseOrteses");
			Field<ListGraphType<CoeficientePremioAdesaoInputType>>("coeficientePremioAdesao");
			Field<ListGraphType<CoeficientePremioDoencasPreExistentesInputType>>("coeficientePremioDoencasPreExistentes");
			Field<ListGraphType<CoeficientePremioLimiteIndemnizacaoInputType>>("coeficientePremioLimiteIndemnizacao");
			Field<ListGraphType<CoeficientePremioPessoasInputType>>("coeficientePremioPessoas");
			Field<ListGraphType<CofreInputType>>("cofre");
			Field<ListGraphType<CombustivelInputType>>("combustivel");
			Field<ListGraphType<ComissaoInputType>>("comissao");
			Field<ListGraphType<ComissaoPlanoInputType>>("comissaoPlano");
			Field<ListGraphType<ComissaoSelecionadaInputType>>("comissaoSelecionada");
			Field<ListGraphType<ComissionamentoInputType>>("comissionamento");
			Field<ListGraphType<ComissionamentoPlanoInputType>>("comissionamentoPlano");
			Field<ListGraphType<ComiteInputType>>("comite");
			Field<ListGraphType<CompanhiaViagemInputType>>("companhiaViagem");
			Field<ListGraphType<CompetenciaAreaInputType>>("competenciaArea");
			Field<ListGraphType<ComponenteSalarialPessoaInputType>>("componenteSalarialPessoa");
			Field<ListGraphType<ComunaInputType>>("comuna");
			Field<ListGraphType<CondicaoAgravamentoInputType>>("condicaoAgravamento");
			Field<ListGraphType<CondicaoAplicacaoAgravamentoInputType>>("condicaoAplicacaoAgravamento");
			Field<ListGraphType<CondicaoAplicacaoTarifaInputType>>("condicaoAplicacaoTarifa");
			Field<ListGraphType<CondicaoOperacaoInputType>>("condicaoOperacao");
			Field<ListGraphType<CondicaoTarifaInputType>>("condicaoTarifa");
			Field<ListGraphType<CondicoesInputType>>("condicoes");
			Field<ListGraphType<CondicoesApoliceInputType>>("condicoesApolice");
			Field<ListGraphType<CondicoesCoSeguroInputType>>("condicoesCoSeguro");
			Field<ListGraphType<CondicoesProdutoInputType>>("condicoesProduto");
			Field<ListGraphType<CondicoesReSeguroInputType>>("condicoesReSeguro");
			Field<ListGraphType<ConstrucaoInputType>>("construcao");
			Field<ListGraphType<ConsumoPlafondInputType>>("consumoPlafond");
			Field<ListGraphType<ContaBancariaPosInputType>>("contaBancariaPos");
			Field<ListGraphType<ContaFinanceiraInputType>>("contaFinanceira");
			Field<ListGraphType<ContactoInputType>>("contacto");
			Field<ListGraphType<ContactoEmpresaInputType>>("contactoEmpresa");
			Field<ListGraphType<ContactoPessoaInputType>>("contactoPessoa");
			Field<ListGraphType<ContadoresRegistosInputType>>("contadoresRegistos");
			Field<ListGraphType<ContinenteInputType>>("continente");
			Field<ListGraphType<ContinentePlanoInputType>>("continentePlano");
			Field<ListGraphType<ContratoInputType>>("contrato");
			Field<ListGraphType<ContratoPrestadorEmpresaInputType>>("contratoPrestadorEmpresa");
			Field<ListGraphType<CorInputType>>("cor");
			Field<ListGraphType<CotacaoInputType>>("cotacao");
			Field<ListGraphType<CriterioComissionamentoInputType>>("criterioComissionamento");
			Field<ListGraphType<CriterioPlanoInputType>>("criterioPlano");
			Field<ListGraphType<CrossSellingInputType>>("crossSelling");
			Field<ListGraphType<CrossSellingRateInputType>>("crossSellingRate");
			Field<ListGraphType<CursosInputType>>("cursos");
			Field<ListGraphType<CustoInputType>>("custo");
			Field<ListGraphType<DeficienciaInputType>>("deficiencia");
			Field<ListGraphType<DenunciaInputType>>("denuncia");
			Field<ListGraphType<DepartamentoInputType>>("departamento");
			Field<ListGraphType<DependenteInputType>>("dependente");
			Field<ListGraphType<DescontoApoliceGrupoInputType>>("descontoApoliceGrupo");
			Field<ListGraphType<DescontoFranquiaInputType>>("descontoFranquia");
			Field<ListGraphType<DescontoFranquiaMedicamentoInputType>>("descontoFranquiaMedicamento");
			Field<ListGraphType<DescontoPessoaInputType>>("descontoPessoa");
			Field<ListGraphType<DescontoPessoaPlanoInputType>>("descontoPessoaPlano");
			Field<ListGraphType<DescontoSeleccionadoInputType>>("descontoSeleccionado");
			Field<ListGraphType<DescricaoBeneficioCoberturaInputType>>("descricaoBeneficioCobertura");
			Field<ListGraphType<DescricaoTratamentoDentarioInputType>>("descricaoTratamentoDentario");
			Field<ListGraphType<DespesaInputType>>("despesa");
			Field<ListGraphType<DespesaLinhaInputType>>("despesaLinha");
			Field<ListGraphType<DespesaPlanoInputType>>("despesaPlano");
			Field<ListGraphType<DespesaSeleccionadaInputType>>("despesaSeleccionada");
			Field<ListGraphType<DestaquesPaginaInputType>>("destaquesPagina");
			Field<ListGraphType<DesvalorizacaoInvalidezPermanenteInputType>>("desvalorizacaoInvalidezPermanente");
			Field<ListGraphType<DetalhePlanoInputType>>("detalhePlano");
			Field<ListGraphType<DiasContagemInputType>>("diasContagem");
			Field<ListGraphType<DimensaoConstrucaoInputType>>("dimensaoConstrucao");
			Field<ListGraphType<DimensaoEmpresaInputType>>("dimensaoEmpresa");
			Field<ListGraphType<DireccaoInputType>>("direccao");
			Field<ListGraphType<DirectorDireccaoInputType>>("directorDireccao");
			Field<ListGraphType<DistritoInputType>>("distrito");
			Field<ListGraphType<DocumentoIdentificacaoInputType>>("documentoIdentificacao");
			Field<ListGraphType<DocumentoMembroAsseguradoInputType>>("documentoMembroAssegurado");
			Field<ListGraphType<DocumentosAnexosApoliceInputType>>("documentosAnexosApolice");
			Field<ListGraphType<DocumentosCoberturasInputType>>("documentosCoberturas");
			Field<ListGraphType<DocumentosLesadoInputType>>("documentosLesado");
			Field<ListGraphType<DocumentosLinhaInputType>>("documentosLinha");
			Field<ListGraphType<DocumentosNecessarioPorLinhaInputType>>("documentosNecessarioPorLinha");
			Field<ListGraphType<DocumentosObjectoEnvolvidoInputType>>("documentosObjectoEnvolvido");
			Field<ListGraphType<DocumentosObrigatorioPlanoInputType>>("documentosObrigatorioPlano");
			Field<ListGraphType<DocumentosObrigatorioProdutoInputType>>("documentosObrigatorioProduto");
			Field<ListGraphType<DocumentosTestemunhaInputType>>("documentosTestemunha");
			Field<ListGraphType<DuracaoTipoContratoInputType>>("duracaoTipoContrato");
			Field<ListGraphType<DuracaoTipoContratoPlanoInputType>>("duracaoTipoContratoPlano");
			Field<ListGraphType<EmissoraDocumentosInputType>>("emissoraDocumentos");
			Field<ListGraphType<EmpresaInputType>>("empresa");
			Field<ListGraphType<EncargosInputType>>("encargos");
			Field<ListGraphType<EnderecoInputType>>("endereco");
			Field<ListGraphType<EnderecoPessoaInputType>>("enderecoPessoa");
			Field<ListGraphType<EnderecoPlanoInputType>>("enderecoPlano");
			Field<ListGraphType<EntidadeEmpregadoraInputType>>("entidadeEmpregadora");
			Field<ListGraphType<EspecieAnimaisInputType>>("especieAnimais");
			Field<ListGraphType<EstadoCivilInputType>>("estadoCivil");
			Field<ListGraphType<EstadoCivilPlanoInputType>>("estadoCivilPlano");
			Field<ListGraphType<ExcedenteInputType>>("excedente");
			Field<ListGraphType<ExcessoPerdaInputType>>("excessoPerda");
			Field<ListGraphType<ExclusoesInputType>>("exclusoes");
			Field<ListGraphType<ExclusoesPlanoInputType>>("exclusoesPlano");
			Field<ListGraphType<ExclusoesSelecionadaApoliceInputType>>("exclusoesSelecionadaApolice");
			Field<ListGraphType<ExclusoesSelecionadaLinhaProdutoInputType>>("exclusoesSelecionadaLinhaProduto");
			Field<ListGraphType<ExclusoesSelecionadaPlanoInputType>>("exclusoesSelecionadaPlano");
			Field<ListGraphType<ExemplarModeloAutomovelInputType>>("exemplarModeloAutomovel");
			Field<ListGraphType<ExercicioInputType>>("exercicio");
			Field<ListGraphType<ExportacoesProdutosInstalacoesInputType>>("exportacoesProdutosInstalacoes");
			Field<ListGraphType<FactorRiscoInputType>>("factorRisco");
			Field<ListGraphType<FaculdadeInputType>>("faculdade");
			Field<ListGraphType<FaculdadeCursoInputType>>("faculdadeCurso");
			Field<ListGraphType<FacultativoResseguroInputType>>("facultativoResseguro");
			Field<ListGraphType<FaixaEtariaInputType>>("faixaEtaria");
			Field<ListGraphType<FaseDocumentosObrigatorioInputType>>("faseDocumentosObrigatorio");
			Field<ListGraphType<FeriadoInputType>>("feriado");
			Field<ListGraphType<FidelizacaoInputType>>("fidelizacao");
			Field<ListGraphType<FidelizacaoComissionamentoInputType>>("fidelizacaoComissionamento");
			Field<ListGraphType<FidelizacaoPlanoInputType>>("fidelizacaoPlano");
			Field<ListGraphType<FiliacaoInputType>>("filiacao");
			Field<ListGraphType<FinalidadeApoliceInputType>>("finalidadeApolice");
			Field<ListGraphType<FormaContratacaoInputType>>("formaContratacao");
			Field<ListGraphType<FormaContratacaoPlanoInputType>>("formaContratacaoPlano");
			Field<ListGraphType<FormaEntregaInputType>>("formaEntrega");
			Field<ListGraphType<FormaLiquidacaoPremioInputType>>("formaLiquidacaoPremio");
			Field<ListGraphType<FormaLiquidacaoPremioPlanoInputType>>("formaLiquidacaoPremioPlano");
			Field<ListGraphType<FormaMovimentoContaFinanceiraInputType>>("formaMovimentoContaFinanceira");
			Field<ListGraphType<FormaPagamentoInputType>>("formaPagamento");
			Field<ListGraphType<FormaPagamentoPlanoInputType>>("formaPagamentoPlano");
			Field<ListGraphType<FormaReparacaoInputType>>("formaReparacao");
			Field<ListGraphType<FormaResseguroInputType>>("formaResseguro");
			Field<ListGraphType<FormaTerminoInputType>>("formaTermino");
			Field<ListGraphType<FormasCobrancaInputType>>("formasCobranca");
			Field<ListGraphType<FornecedorInputType>>("fornecedor");
			Field<ListGraphType<FotografiasObjectoEnvolvidoInputType>>("fotografiasObjectoEnvolvido");
			Field<ListGraphType<FraccionamentoInputType>>("fraccionamento");
			Field<ListGraphType<FraccionamentoPlanoInputType>>("fraccionamentoPlano");
			Field<ListGraphType<FranquiaInvalidezTemporariaInputType>>("franquiaInvalidezTemporaria");
			Field<ListGraphType<FranquiaSeleccionadoInputType>>("franquiaSeleccionado");
			Field<ListGraphType<FuncaoInputType>>("funcao");
			Field<ListGraphType<FuncionalidadeInputType>>("funcionalidade");
			Field<ListGraphType<FuncionarioInputType>>("funcionario");
			Field<ListGraphType<FuncionarioInstalacoesInputType>>("funcionarioInstalacoes");
			Field<ListGraphType<GarantiaPlanoInputType>>("garantiaPlano");
			Field<ListGraphType<GarantiasAfetasDespesasMedicasInputType>>("garantiasAfetasDespesasMedicas");
			Field<ListGraphType<GarantiasCoberturaInputType>>("garantiasCobertura");
			Field<ListGraphType<GarantiasContratadasInputType>>("garantiasContratadas");
			Field<ListGraphType<GlossarioInputType>>("glossario");
			Field<ListGraphType<GpsautomovelInputType>>("gpsautomovel");
			Field<ListGraphType<GrauParentescoInputType>>("grauParentesco");
			Field<ListGraphType<GrupoImpostoInputType>>("grupoImposto");
			Field<ListGraphType<GrupoPessoasInputType>>("grupoPessoas");
			Field<ListGraphType<HabilitacoesLiterariasInputType>>("habilitacoesLiterarias");
			Field<ListGraphType<HabilitacoesLiterariasPessoaInputType>>("habilitacoesLiterariasPessoa");
			Field<ListGraphType<HablitacoesLiterariasPlanoInputType>>("hablitacoesLiterariasPlano");
			Field<ListGraphType<HistoricoContadoresRegistosInputType>>("historicoContadoresRegistos");
			Field<ListGraphType<HistoricoPadraoInputType>>("historicoPadrao");
			Field<ListGraphType<HistoricoPrecarioProdutoInputType>>("historicoPrecarioProduto");
			Field<ListGraphType<IdiomaPessoaInputType>>("idiomaPessoa");
			Field<ListGraphType<IdiomasInputType>>("idiomas");
			Field<ListGraphType<ImagemProdutoInputType>>("imagemProduto");
			Field<ListGraphType<ImagensConstrucaoInputType>>("imagensConstrucao");
			Field<ListGraphType<ImpostoInputType>>("imposto");
			Field<ListGraphType<ImpostoLinhaInputType>>("impostoLinha");
			Field<ListGraphType<ImpostoPrecarioInputType>>("impostoPrecario");
			Field<ListGraphType<ImpostoTipoDocumentosInputType>>("impostoTipoDocumentos");
			Field<ListGraphType<IncapacidadePessoaInputType>>("incapacidadePessoa");
			Field<ListGraphType<IncapacidadeTemporariaInputType>>("incapacidadeTemporaria");
			Field<ListGraphType<IndeminizacaoInputType>>("indeminizacao");
			Field<ListGraphType<IndexadorInputType>>("indexador");
			Field<ListGraphType<IndiceCargaPneuInputType>>("indiceCargaPneu");
			Field<ListGraphType<IndiceVelocidadePneuInputType>>("indiceVelocidadePneu");
			Field<ListGraphType<InformacaoAdicionalInputType>>("informacaoAdicional");
			Field<ListGraphType<InformacaoBancariaInputType>>("informacaoBancaria");
			Field<ListGraphType<InformacaoBancariaPosInputType>>("informacaoBancariaPos");
			Field<ListGraphType<InformacaoSuporteInputType>>("informacaoSuporte");
			Field<ListGraphType<InformacoesAdicionaisProdutoInputType>>("informacoesAdicionaisProduto");
			Field<ListGraphType<InfraccoesInputType>>("infraccoes");
			Field<ListGraphType<InstalacoesInputType>>("instalacoes");
			Field<ListGraphType<InstitutoSuperiorInputType>>("institutoSuperior");
			Field<ListGraphType<IntervaloRecorrenciaInputType>>("intervaloRecorrencia");
			Field<ListGraphType<ItensExclusaoInputType>>("itensExclusao");
			Field<ListGraphType<ItensPerguntaInputType>>("itensPergunta");
			Field<ListGraphType<JustificacaoInputType>>("justificacao");
			Field<ListGraphType<LadoVolanteInputType>>("ladoVolante");
			Field<ListGraphType<LeadInputType>>("lead");
			Field<ListGraphType<LembreteInputType>>("lembrete");
			Field<ListGraphType<LesadoInputType>>("lesado");
			Field<ListGraphType<LesaoLesadoInputType>>("lesaoLesado");
			Field<ListGraphType<LicencaModuloInputType>>("licencaModulo");
			Field<ListGraphType<LimiteCoberturaInputType>>("limiteCobertura");
			Field<ListGraphType<LimiteComissionamentoPlanoInputType>>("limiteComissionamentoPlano");
			Field<ListGraphType<LimiteCompetenciaInputType>>("limiteCompetencia");
			Field<ListGraphType<LimiteGarantiaResponsabilidadeCivilInputType>>("limiteGarantiaResponsabilidadeCivil");
			Field<ListGraphType<LimiteResponsabilidadeInputType>>("limiteResponsabilidade");
			Field<ListGraphType<LimiteResponsablidadeCivilAutomovelInputType>>("limiteResponsablidadeCivilAutomovel");
			Field<ListGraphType<LimitesAceitacaoInputType>>("limitesAceitacao");
			Field<ListGraphType<LimitesComissionamentoInputType>>("limitesComissionamento");
			Field<ListGraphType<LimitesRapelInputType>>("limitesRapel");
			Field<ListGraphType<LinhaProdutoInputType>>("linhaProduto");
			Field<ListGraphType<LinhaProdutoImpostoInputType>>("linhaProdutoImposto");
			Field<ListGraphType<ListaNegraInputType>>("listaNegra");
			Field<ListGraphType<LocaisCoberturaInputType>>("locaisCobertura");
			Field<ListGraphType<LocaisComissaoInputType>>("locaisComissao");
			Field<ListGraphType<LocaisDescontoInputType>>("locaisDesconto");
			Field<ListGraphType<LocaisEncargoInputType>>("locaisEncargo");
			Field<ListGraphType<LocaisFranquiaInputType>>("locaisFranquia");
			Field<ListGraphType<LocaisImpostoInputType>>("locaisImposto");
			Field<ListGraphType<LocaisLimiteCompetenciaInputType>>("locaisLimiteCompetencia");
			Field<ListGraphType<LocaisObjectivosComerciaisInputType>>("locaisObjectivosComerciais");
			Field<ListGraphType<LocaisOfertaInputType>>("locaisOferta");
			Field<ListGraphType<LocalConsultaInputType>>("localConsulta");
			Field<ListGraphType<LocalTrabalhoInputType>>("localTrabalho");
			Field<ListGraphType<LocalTrabalhoPessoaInputType>>("localTrabalhoPessoa");
			Field<ListGraphType<LocalidadeAntenaInputType>>("localidadeAntena");
			Field<ListGraphType<LocalizacaoInstalacoesInputType>>("localizacaoInstalacoes");
			Field<ListGraphType<LocalizacaoPneuInputType>>("localizacaoPneu");
			Field<ListGraphType<LugaresAutoAssegurarInputType>>("lugaresAutoAssegurar");
			Field<ListGraphType<MarcaAutomovelInputType>>("marcaAutomovel");
			Field<ListGraphType<MarcaGpsInputType>>("marcaGps");
			Field<ListGraphType<MargemVendaProdutoInputType>>("margemVendaProduto");
			Field<ListGraphType<MargemVendaSeleccionadoInputType>>("margemVendaSeleccionado");
			Field<ListGraphType<MediacaoComissaoInputType>>("mediacaoComissao");
			Field<ListGraphType<MedicamentosPrestadoresInputType>>("medicamentosPrestadores");
			Field<ListGraphType<MedicoInputType>>("medico");
			Field<ListGraphType<MeioAutorizacaoInputType>>("meioAutorizacao");
			Field<ListGraphType<MeioTransporteInputType>>("meioTransporte");
			Field<ListGraphType<MembroAsseguradoInputType>>("membroAssegurado");
			Field<ListGraphType<MembroCadInputType>>("membroCad");
			Field<ListGraphType<MembrosGrupoInputType>>("membrosGrupo");
			Field<ListGraphType<MenuInputType>>("menu");
			Field<ListGraphType<MesesInputType>>("meses");
			Field<ListGraphType<MetodoSistemaAquecimentoInputType>>("metodoSistemaAquecimento");
			Field<ListGraphType<MetricaKpiInputType>>("metricaKpi");
			Field<ListGraphType<ModalidadeAssegurarInputType>>("modalidadeAssegurar");
			Field<ListGraphType<ModalidadeAtrasoViagemInputType>>("modalidadeAtrasoViagem");
			Field<ListGraphType<ModalidadeContratoNaoProporcionalInputType>>("modalidadeContratoNaoProporcional");
			Field<ListGraphType<ModalidadeContratoProporcionalInputType>>("modalidadeContratoProporcional");
			Field<ListGraphType<ModalidadeReembolsoInputType>>("modalidadeReembolso");
			Field<ListGraphType<ModalidadeSeguroInputType>>("modalidadeSeguro");
			Field<ListGraphType<ModalidadesRcselecionadasInputType>>("modalidadesRcselecionadas");
			Field<ListGraphType<ModalidadesResponsabilidadeCivilInputType>>("modalidadesResponsabilidadeCivil");
			Field<ListGraphType<ModeloAutomovelInputType>>("modeloAutomovel");
			Field<ListGraphType<ModeloGpsInputType>>("modeloGps");
			Field<ListGraphType<ModeloMapaInputType>>("modeloMapa");
			Field<ListGraphType<ModificacaoInputType>>("modificacao");
			Field<ListGraphType<ModuloCoreInputType>>("moduloCore");
			Field<ListGraphType<ModuloCoreDireccaoInputType>>("moduloCoreDireccao");
			Field<ListGraphType<MoedaInputType>>("moeda");
			Field<ListGraphType<MoradaInputType>>("morada");
			Field<ListGraphType<MotivoViagemInputType>>("motivoViagem");
			Field<ListGraphType<MotoristaInputType>>("motorista");
			Field<ListGraphType<MotoristaAutomovelInputType>>("motoristaAutomovel");
			Field<ListGraphType<MunicipioInputType>>("municipio");
			Field<ListGraphType<NacionalidadePessoaInputType>>("nacionalidadePessoa");
			Field<ListGraphType<NacionalidadePessoaPlanoInputType>>("nacionalidadePessoaPlano");
			Field<ListGraphType<NaturezaMovimentoInputType>>("naturezaMovimento");
			Field<ListGraphType<NewsletterInputType>>("newsletter");
			Field<ListGraphType<NivelAbrangenciaInputType>>("nivelAbrangencia");
			Field<ListGraphType<NivelAcessoInputType>>("nivelAcesso");
			Field<ListGraphType<NivelCompetenciaInputType>>("nivelCompetencia");
			Field<ListGraphType<NivelDesempenhoInputType>>("nivelDesempenho");
			Field<ListGraphType<NivelRiscoInputType>>("nivelRisco");
			Field<ListGraphType<NivelRiscoCoberturaInputType>>("nivelRiscoCobertura");
			Field<ListGraphType<NotaInputType>>("nota");
			Field<ListGraphType<NumeroPessoasAbrangivelInputType>>("numeroPessoasAbrangivel");
			Field<ListGraphType<ObjectivoPlanoInputType>>("objectivoPlano");
			Field<ListGraphType<ObjectivoProdutoInputType>>("objectivoProduto");
			Field<ListGraphType<ObjectivosAreaInputType>>("objectivosArea");
			Field<ListGraphType<ObjectivosComerciaisInputType>>("objectivosComerciais");
			Field<ListGraphType<ObjectoEnvolvidoInputType>>("objectoEnvolvido");
			Field<ListGraphType<ObjectoSeguradoInputType>>("objectoSegurado");
			Field<ListGraphType<ObjectoTrabalhoInputType>>("objectoTrabalho");
			Field<ListGraphType<ObjectoTrabalhoPessoaInputType>>("objectoTrabalhoPessoa");
			Field<ListGraphType<ObrigacoesProdutoInputType>>("obrigacoesProduto");
			Field<ListGraphType<ObservacoesBoletimAdesaoInputType>>("observacoesBoletimAdesao");
			Field<ListGraphType<OfertaLinhaInputType>>("ofertaLinha");
			Field<ListGraphType<OfertaPlanoInputType>>("ofertaPlano");
			Field<ListGraphType<OpcaoInputType>>("opcao");
			Field<ListGraphType<OperacaoInputType>>("operacao");
			Field<ListGraphType<OperaccoesPagamentoInputType>>("operaccoesPagamento");
			Field<ListGraphType<OperacoesCrudInputType>>("operacoesCrud");
			Field<ListGraphType<OperacoesCrudpessoaInputType>>("operacoesCrudpessoa");
			Field<ListGraphType<OperacoesPagamentoInputType>>("operacoesPagamento");
			Field<ListGraphType<OperacoesRecebimentoInputType>>("operacoesRecebimento");
			Field<ListGraphType<OrgaoRegularizadorInputType>>("orgaoRegularizador");
			Field<ListGraphType<OrigemFabricoEmbalagemInputType>>("origemFabricoEmbalagem");
			Field<ListGraphType<OutraSeguradoraContratoInputType>>("outraSeguradoraContrato");
			Field<ListGraphType<OutrasInformacoesSinistroInputType>>("outrasInformacoesSinistro");
			Field<ListGraphType<OutrosSegurosInputType>>("outrosSeguros");
			Field<ListGraphType<PacienteInputType>>("paciente");
			Field<ListGraphType<PadraoRecorrenciaInputType>>("padraoRecorrencia");
			Field<ListGraphType<PaisInputType>>("pais");
			Field<ListGraphType<PapelInputType>>("papel");
			Field<ListGraphType<PapelModuloFuncionalidadeInputType>>("papelModuloFuncionalidade");
			Field<ListGraphType<PapelModuloPessoaInputType>>("papelModuloPessoa");
			Field<ListGraphType<PapelPessoaInputType>>("papelPessoa");
			Field<ListGraphType<PapelPlanoInputType>>("papelPlano");
			Field<ListGraphType<PerdaInputType>>("perda");
			Field<ListGraphType<PerfilDesenvolvimentoInputType>>("perfilDesenvolvimento");
			Field<ListGraphType<PerfilDesenvolvimentoPessoaInputType>>("perfilDesenvolvimentoPessoa");
			Field<ListGraphType<PerguntasInputType>>("perguntas");
			Field<ListGraphType<PerguntasFrequentesEmpresaInputType>>("perguntasFrequentesEmpresa");
			Field<ListGraphType<PerguntasFrequentesProdutoInputType>>("perguntasFrequentesProduto");
			Field<ListGraphType<PeriodoInputType>>("periodo");
			Field<ListGraphType<PeriodoAnualImpostoInputType>>("periodoAnualImposto");
			Field<ListGraphType<PeriodoCalculoInputType>>("periodoCalculo");
			Field<ListGraphType<PeriodoCoberturaProdutoInputType>>("periodoCoberturaProduto");
			Field<ListGraphType<PeriodoPlanoInputType>>("periodoPlano");
			Field<ListGraphType<PeriodoPlanoPlanoInputType>>("periodoPlanoPlano");
			Field<ListGraphType<PerspicaciaInputType>>("perspicacia");
			Field<ListGraphType<PesoAutomovelInputType>>("pesoAutomovel");
			Field<ListGraphType<PessoaInputType>>("pessoa");
			Field<ListGraphType<PessoaProfissaoInputType>>("pessoaProfissao");
			Field<ListGraphType<PessoaTarefaInputType>>("pessoaTarefa");
			Field<ListGraphType<PessoasAbrangidasInputType>>("pessoasAbrangidas");
			Field<ListGraphType<PessoasPolitamenteExpostasInputType>>("pessoasPolitamenteExpostas");
			Field<ListGraphType<PessoasPosInputType>>("pessoasPos");
			Field<ListGraphType<PlanoComercialPorProdutorInputType>>("planoComercialPorProdutor");
			Field<ListGraphType<PlanoComissionamentoProdutorInputType>>("planoComissionamentoProdutor");
			Field<ListGraphType<PlanoContasInputType>>("planoContas");
			Field<ListGraphType<PlanoObjectivoComercialInputType>>("planoObjectivoComercial");
			Field<ListGraphType<PlanoProdutoInputType>>("planoProduto");
			Field<ListGraphType<PneuInputType>>("pneu");
			Field<ListGraphType<PontosClausulaInputType>>("pontosClausula");
			Field<ListGraphType<PortfolioProdutoInputType>>("portfolioProduto");
			Field<ListGraphType<PosInputType>>("pos");
			Field<ListGraphType<PrazosInputType>>("prazos");
			Field<ListGraphType<PrazosCurtosInputType>>("prazosCurtos");
			Field<ListGraphType<PrecarioProdutoInputType>>("precarioProduto");
			Field<ListGraphType<PrecosAtosMedicosInputType>>("precosAtosMedicos");
			Field<ListGraphType<PrecosProdutosFarmaceuticosInputType>>("precosProdutosFarmaceuticos");
			Field<ListGraphType<PrejuizoSofridoVeiculoTerceiroInputType>>("prejuizoSofridoVeiculoTerceiro");
			Field<ListGraphType<PremiosInputType>>("premios");
			Field<ListGraphType<PremiosExploracaoRuralInputType>>("premiosExploracaoRural");
			Field<ListGraphType<PremiosMercadoriasNaoOrdinariasInputType>>("premiosMercadoriasNaoOrdinarias");
			Field<ListGraphType<PremiosMinimosInputType>>("premiosMinimos");
			Field<ListGraphType<PremiosProfissoesAgravamentoInputType>>("premiosProfissoesAgravamento");
			Field<ListGraphType<PremiosRiscosSimplesInputType>>("premiosRiscosSimples");
			Field<ListGraphType<PremiosRiscosSimplesOrdinariosInputType>>("premiosRiscosSimplesOrdinarios");
			Field<ListGraphType<PressupostoAcidentePessoalInputType>>("pressupostoAcidentePessoal");
			Field<ListGraphType<PrestacoesFraccionamentoInputType>>("prestacoesFraccionamento");
			Field<ListGraphType<PrestadorInputType>>("prestador");
			Field<ListGraphType<PrestadorServicoInputType>>("prestadorServico");
			Field<ListGraphType<PrioridadeInputType>>("prioridade");
			Field<ListGraphType<PrioridadeTarefaInputType>>("prioridadeTarefa");
			Field<ListGraphType<ProcessoInputType>>("processo");
			Field<ListGraphType<ProcessoFuncionalidadeInputType>>("processoFuncionalidade");
			Field<ListGraphType<ProdutoInputType>>("produto");
			Field<ListGraphType<ProdutosEmpresaInputType>>("produtosEmpresa");
			Field<ListGraphType<ProdutosFarmaceuticosInputType>>("produtosFarmaceuticos");
			Field<ListGraphType<ProdutosInstalacoesInputType>>("produtosInstalacoes");
			Field<ListGraphType<ProdutosPrestadoresInputType>>("produtosPrestadores");
			Field<ListGraphType<ProfissaoInputType>>("profissao");
			Field<ListGraphType<ProfissaoPlanoInputType>>("profissaoPlano");
			Field<ListGraphType<ProvinciaInputType>>("provincia");
			Field<ListGraphType<ProvinciaComissionamentoInputType>>("provinciaComissionamento");
			Field<ListGraphType<ProvinciaPlanoInputType>>("provinciaPlano");
			Field<ListGraphType<QuadroDanosInputType>>("quadroDanos");
			Field<ListGraphType<QualidadeProponenteInputType>>("qualidadeProponente");
			Field<ListGraphType<QualidadeSeguraInputType>>("qualidadeSegura");
			Field<ListGraphType<QuestionarioInputType>>("questionario");
			Field<ListGraphType<RapelProdutorInputType>>("rapelProdutor");
			Field<ListGraphType<ReciboInputType>>("recibo");
			Field<ListGraphType<ReclamacaoInputType>>("reclamacao");
			Field<ListGraphType<RecorrenciaDiarioInputType>>("recorrenciaDiario");
			Field<ListGraphType<RecorrenciaMesAnoInputType>>("recorrenciaMesAno");
			Field<ListGraphType<RecorrenciaSemanalInputType>>("recorrenciaSemanal");
			Field<ListGraphType<RedeSociaisInputType>>("redeSociais");
			Field<ListGraphType<ReducaoPremioAcidentesTrabalhoInputType>>("reducaoPremioAcidentesTrabalho");
			Field<ListGraphType<ReducoesAutorizadasInputType>>("reducoesAutorizadas");
			Field<ListGraphType<ReembolsoDespesasMedicasInputType>>("reembolsoDespesasMedicas");
			Field<ListGraphType<ReembolsoTratamentoDentarioInputType>>("reembolsoTratamentoDentario");
			Field<ListGraphType<RegiaoInputType>>("regiao");
			Field<ListGraphType<ReivindicacoesFeitasApoliceInputType>>("reivindicacoesFeitasApolice");
			Field<ListGraphType<RelatorioLinksInputType>>("relatorioLinks");
			Field<ListGraphType<RelatorioPoliciaInputType>>("relatorioPolicia");
			Field<ListGraphType<RendimentoPessoaInputType>>("rendimentoPessoa");
			Field<ListGraphType<RendimentosPessoaInputType>>("rendimentosPessoa");
			Field<ListGraphType<RenovacaoApoliceInputType>>("renovacaoApolice");
			Field<ListGraphType<ReparacaoInputType>>("reparacao");
			Field<ListGraphType<ReservasTecnicasInputType>>("reservasTecnicas");
			Field<ListGraphType<ResponsabilizadoInputType>>("responsabilizado");
			Field<ListGraphType<ResponsavelBalcaoInputType>>("responsavelBalcao");
			Field<ListGraphType<ResponsavelObrigacoesInputType>>("responsavelObrigacoes");
			Field<ListGraphType<RespostaPerguntaInputType>>("respostaPergunta");
			Field<ListGraphType<RestricoesCategoriasCartaConducaoInputType>>("restricoesCategoriasCartaConducao");
			Field<ListGraphType<RestricoesPessoaisCartaConducaoInputType>>("restricoesPessoaisCartaConducao");
			Field<ListGraphType<RestricoesViaturaCartaConducaoInputType>>("restricoesViaturaCartaConducao");
			Field<ListGraphType<RiscoInputType>>("risco");
			Field<ListGraphType<RiscoOutraSeguradoraContratoInputType>>("riscoOutraSeguradoraContrato");
			Field<ListGraphType<RiscoPlanoProdutoInputType>>("riscoPlanoProduto");
			Field<ListGraphType<RiscosExcluidosInputType>>("riscosExcluidos");
			Field<ListGraphType<RuaInputType>>("rua");
			Field<ListGraphType<SaldoInputType>>("saldo");
			Field<ListGraphType<ScoringInputType>>("scoring");
			Field<ListGraphType<SeccaoInputType>>("seccao");
			Field<ListGraphType<SectorInputType>>("sector");
			Field<ListGraphType<SectorActividadeInputType>>("sectorActividade");
			Field<ListGraphType<SectorActividadePlanoInputType>>("sectorActividadePlano");
			Field<ListGraphType<SectorActividadesProdutorInputType>>("sectorActividadesProdutor");
			Field<ListGraphType<SectorAtividadeEconomicaInputType>>("sectorAtividadeEconomica");
			Field<ListGraphType<SegmentoComissionamentoProdutorInputType>>("segmentoComissionamentoProdutor");
			Field<ListGraphType<SegmentoFranquiaInputType>>("segmentoFranquia");
			Field<ListGraphType<SegmentoObjectivosComerciaisInputType>>("segmentoObjectivosComerciais");
			Field<ListGraphType<SegmentoOfertaInputType>>("segmentoOferta");
			Field<ListGraphType<SegmentoProdutoInputType>>("segmentoProduto");
			Field<ListGraphType<SegmentoProdutoPlanoInputType>>("segmentoProdutoPlano");
			Field<ListGraphType<SegmentoTipoCoberturaInputType>>("segmentoTipoCobertura");
			Field<ListGraphType<SeguradoInputType>>("segurado");
			Field<ListGraphType<ServicoInputType>>("servico");
			Field<ListGraphType<ServicosAdicionaisInputType>>("servicosAdicionais");
			Field<ListGraphType<ServicosBaseInputType>>("servicosBase");
			Field<ListGraphType<SessaoImpostoInputType>>("sessaoImposto");
			Field<ListGraphType<SexoInputType>>("sexo");
			Field<ListGraphType<SexoPlanoInputType>>("sexoPlano");
			Field<ListGraphType<SimulacaoInputType>>("simulacao");
			Field<ListGraphType<SimulacaoDependenteInputType>>("simulacaoDependente");
			Field<ListGraphType<SinistradoInputType>>("sinistrado");
			Field<ListGraphType<SinistroInputType>>("sinistro");
			Field<ListGraphType<SistemaAquecimentoInputType>>("sistemaAquecimento");
			Field<ListGraphType<SistemaLiquidacaoSinistroInputType>>("sistemaLiquidacaoSinistro");
			Field<ListGraphType<SituacaoEmpregoInputType>>("situacaoEmprego");
			Field<ListGraphType<SlideInputType>>("slide");
			Field<ListGraphType<SobrePremioCoberturaAdicionalInputType>>("sobrePremioCoberturaAdicional");
			Field<ListGraphType<SubCategoriaItensInputType>>("subCategoriaItens");
			Field<ListGraphType<SubClasseModalidadeSeguroInputType>>("subClasseModalidadeSeguro");
			Field<ListGraphType<SubClausulasPontosInputType>>("subClausulasPontos");
			Field<ListGraphType<SubFormaResseguroInputType>>("subFormaResseguro");
			Field<ListGraphType<SubFormaResseguroInformacaoInputType>>("subFormaResseguroInformacao");
			Field<ListGraphType<SubPontoAmbitoInputType>>("subPontoAmbito");
			Field<ListGraphType<SubPontosClausulaInputType>>("subPontosClausula");
			Field<ListGraphType<SubRamoInputType>>("subRamo");
			Field<ListGraphType<SubRiscoInputType>>("subRisco");
			Field<ListGraphType<SubSectorInputType>>("subSector");
			Field<ListGraphType<SubTarefaInputType>>("subTarefa");
			Field<ListGraphType<SubTipoContaInputType>>("subTipoConta");
			Field<ListGraphType<SubTipoDeRecebimentoInputType>>("subTipoDeRecebimento");
			Field<ListGraphType<SubTipoDesvalorizacaoInputType>>("subTipoDesvalorizacao");
			Field<ListGraphType<SubTipoPagamentoInputType>>("subTipoPagamento");
			Field<ListGraphType<SubTituloDesvalorizacaoInvalidezPermanenteInputType>>("subTituloDesvalorizacaoInvalidezPermanente");
			Field<ListGraphType<SubscricaoCessaoRetencaoInputType>>("subscricaoCessaoRetencao");
			Field<ListGraphType<SugestaoInputType>>("sugestao");
			//Field<ListGraphType<SysAuditoriaInputType>>("sysAuditoria");
			//Field<ListGraphType<SysEstadoLogInputType>>("sysEstadoLog");
			//Field<ListGraphType<SysLogInputType>>("sysLog");
			Field<ListGraphType<TabuaAngm1940InputType>>("tabuaAngm1940");
			Field<ListGraphType<TabuaAngv2020PInputType>>("tabuaAngv2020P");
			Field<ListGraphType<TarefaInputType>>("tarefa");
			Field<ListGraphType<TarefaRecorrenteInputType>>("tarefaRecorrente");
			Field<ListGraphType<TarefaReparacaoInputType>>("tarefaReparacao");
			Field<ListGraphType<TarefasAgendamentoInputType>>("tarefasAgendamento");
			Field<ListGraphType<TarifaInputType>>("tarifa");
			Field<ListGraphType<TarifasAutomovelInputType>>("tarifasAutomovel");
			Field<ListGraphType<TarifasDanosPropriosInputType>>("tarifasDanosProprios");
			Field<ListGraphType<TarifasPremioAutoAcidentesTrabalhoInputType>>("tarifasPremioAutoAcidentesTrabalho");
			Field<ListGraphType<TarifasPremioAutoAt2InputType>>("tarifasPremioAutoAt2");
			Field<ListGraphType<TarifasResponsabilidadeCivilInputType>>("tarifasResponsabilidadeCivil");
			Field<ListGraphType<TaxaPremioFixoIndicNomeInputType>>("taxaPremioFixoIndicNome");
			Field<ListGraphType<TaxaSinistralidadeInputType>>("taxaSinistralidade");
			Field<ListGraphType<TaxasInputType>>("taxas");
			Field<ListGraphType<TerceiroInputType>>("terceiro");
			Field<ListGraphType<TermoResponsabilidadeInputType>>("termoResponsabilidade");
			Field<ListGraphType<TestemunhaInputType>>("testemunha");
			Field<ListGraphType<TipoAcompanhamentoInputType>>("tipoAcompanhamento");
			Field<ListGraphType<TipoActividadeInputType>>("tipoActividade");
			Field<ListGraphType<TipoAdesaoInputType>>("tipoAdesao");
			Field<ListGraphType<TipoAgravamentoInputType>>("tipoAgravamento");
			Field<ListGraphType<TipoApoliceInputType>>("tipoApolice");
			Field<ListGraphType<TipoAprovacaoInputType>>("tipoAprovacao");
			Field<ListGraphType<TipoAutoridadeInputType>>("tipoAutoridade");
			Field<ListGraphType<TipoCaixaInputType>>("tipoCaixa");
			Field<ListGraphType<TipoCartaConducaoInputType>>("tipoCartaConducao");
			Field<ListGraphType<TipoCartaoInputType>>("tipoCartao");
			Field<ListGraphType<TipoCartaoPagamentoInputType>>("tipoCartaoPagamento");
			Field<ListGraphType<TipoCasaInputType>>("tipoCasa");
			Field<ListGraphType<TipoCasoInputType>>("tipoCaso");
			Field<ListGraphType<TipoCategoriaInputType>>("tipoCategoria");
			Field<ListGraphType<TipoClasseContaInputType>>("tipoClasseConta");
			Field<ListGraphType<TipoClassificacaoModalidadeCaeInputType>>("tipoClassificacaoModalidadeCae");
			Field<ListGraphType<TipoClienteInputType>>("tipoCliente");
			Field<ListGraphType<TipoCoberturaInputType>>("tipoCobertura");
			Field<ListGraphType<TipoCofreInputType>>("tipoCofre");
			Field<ListGraphType<TipoComissaoInputType>>("tipoComissao");
			Field<ListGraphType<TipoComissionamentoResseguroInputType>>("tipoComissionamentoResseguro");
			Field<ListGraphType<TipoCondicoesInputType>>("tipoCondicoes");
			Field<ListGraphType<TipoConstrucaoPneusInputType>>("tipoConstrucaoPneus");
			Field<ListGraphType<TipoConsultaInputType>>("tipoConsulta");
			Field<ListGraphType<TipoContaInputType>>("tipoConta");
			Field<ListGraphType<TipoContactoInputType>>("tipoContacto");
			Field<ListGraphType<TipoContratacaoInputType>>("tipoContratacao");
			Field<ListGraphType<TipoContratoInputType>>("tipoContrato");
			Field<ListGraphType<TipoCosseguroInputType>>("tipoCosseguro");
			Field<ListGraphType<TipoDanosInputType>>("tipoDanos");
			Field<ListGraphType<TipoDeRecebimentoInputType>>("tipoDeRecebimento");
			Field<ListGraphType<TipoDescontoInputType>>("tipoDesconto");
			Field<ListGraphType<TipoDespesaInputType>>("tipoDespesa");
			Field<ListGraphType<TipoDocumentoIdentificacaoInputType>>("tipoDocumentoIdentificacao");
			Field<ListGraphType<TipoDocumentosInputType>>("tipoDocumentos");
			Field<ListGraphType<TipoEmbalagemInputType>>("tipoEmbalagem");
			Field<ListGraphType<TipoEmbarcacaoInputType>>("tipoEmbarcacao");
			Field<ListGraphType<TipoEmpresaInputType>>("tipoEmpresa");
			Field<ListGraphType<TipoEncargoInputType>>("tipoEncargo");
			Field<ListGraphType<TipoEnderecoInputType>>("tipoEndereco");
			Field<ListGraphType<TipoEntidadeInputType>>("tipoEntidade");
			Field<ListGraphType<TipoEntidadePlanoInputType>>("tipoEntidadePlano");
			Field<ListGraphType<TipoEstabelecimentoComercioInputType>>("tipoEstabelecimentoComercio");
			Field<ListGraphType<TipoExclusaoInputType>>("tipoExclusao");
			Field<ListGraphType<TipoFacturacaoInputType>>("tipoFacturacao");
			Field<ListGraphType<TipoFacturamentoInputType>>("tipoFacturamento");
			Field<ListGraphType<TipoFranquiaInputType>>("tipoFranquia");
			Field<ListGraphType<TipoGaragemInputType>>("tipoGaragem");
			Field<ListGraphType<TipoGrupoInputType>>("tipoGrupo");
			Field<ListGraphType<TipoImagemProdutoInputType>>("tipoImagemProduto");
			Field<ListGraphType<TipoImpostoInputType>>("tipoImposto");
			Field<ListGraphType<TipoIncapacidadeInputType>>("tipoIncapacidade");
			Field<ListGraphType<TipoInfracaoInputType>>("tipoInfracao");
			Field<ListGraphType<TipoInstalacaoElectricaInputType>>("tipoInstalacaoElectrica");
			Field<ListGraphType<TipoInstalacoesInputType>>("tipoInstalacoes");
			Field<ListGraphType<TipoIntervencaoInputType>>("tipoIntervencao");
			Field<ListGraphType<TipoJustificativoCativoInputType>>("tipoJustificativoCativo");
			Field<ListGraphType<TipoLesaoInputType>>("tipoLesao");
			Field<ListGraphType<TipoLevantamentoMedicamentoInputType>>("tipoLevantamentoMedicamento");
			Field<ListGraphType<TipoLimiteResponsabilidadeInputType>>("tipoLimiteResponsabilidade");
			Field<ListGraphType<TipoMargemInputType>>("tipoMargem");
			Field<ListGraphType<TipoMaterialConstrucaoInputType>>("tipoMaterialConstrucao");
			Field<ListGraphType<TipoMatriculaInputType>>("tipoMatricula");
			Field<ListGraphType<TipoMovimentoInputType>>("tipoMovimento");
			Field<ListGraphType<TipoObjectivoComercialInputType>>("tipoObjectivoComercial");
			Field<ListGraphType<TipoObjectivoEstrategicoInputType>>("tipoObjectivoEstrategico");
			Field<ListGraphType<TipoObjectivoProdutoInputType>>("tipoObjectivoProduto");
			Field<ListGraphType<TipoObjectoEnvolvidoInputType>>("tipoObjectoEnvolvido");
			Field<ListGraphType<TipoObrigacoesInputType>>("tipoObrigacoes");
			Field<ListGraphType<TipoOfertaInputType>>("tipoOferta");
			Field<ListGraphType<TipoOperacaoInputType>>("tipoOperacao");
			Field<ListGraphType<TipoOperacaoProcessoInputType>>("tipoOperacaoProcesso");
			Field<ListGraphType<TipoOperacaoProcessoLimiteCompetenciaInputType>>("tipoOperacaoProcessoLimiteCompetencia");
			Field<ListGraphType<TipoOrtesesProtesesInputType>>("tipoOrtesesProteses");
			Field<ListGraphType<TipoOucupantesInputType>>("tipoOucupantes");
			Field<ListGraphType<TipoPagamentoInputType>>("tipoPagamento");
			Field<ListGraphType<TipoPagamentoMovimentoInputType>>("tipoPagamentoMovimento");
			Field<ListGraphType<TipoPartoInputType>>("tipoParto");
			Field<ListGraphType<TipoPerdaInputType>>("tipoPerda");
			Field<ListGraphType<TipoPessoaInputType>>("tipoPessoa");
			Field<ListGraphType<TipoPessoaPlanoInputType>>("tipoPessoaPlano");
			Field<ListGraphType<TipoPinturaInputType>>("tipoPintura");
			Field<ListGraphType<TipoPlanoObjectivoInputType>>("tipoPlanoObjectivo");
			Field<ListGraphType<TipoPortfolioProdutoInputType>>("tipoPortfolioProduto");
			Field<ListGraphType<TipoPremioFixoInputType>>("tipoPremioFixo");
			Field<ListGraphType<TipoProdutorInputType>>("tipoProdutor");
			Field<ListGraphType<TipoPropriedadeInputType>>("tipoPropriedade");
			Field<ListGraphType<TipoProvisaoInputType>>("tipoProvisao");
			Field<ListGraphType<TipoQuadroDanoInputType>>("tipoQuadroDano");
			Field<ListGraphType<TipoQuestionarioInputType>>("tipoQuestionario");
			Field<ListGraphType<TipoRamoSeguroInputType>>("tipoRamoSeguro");
			Field<ListGraphType<TipoRecebimentoInputType>>("tipoRecebimento");
			Field<ListGraphType<TipoRecebimentoMovimentoInputType>>("tipoRecebimentoMovimento");
			Field<ListGraphType<TipoRedeSociaisInputType>>("tipoRedeSociais");
			Field<ListGraphType<TipoRegimeInputType>>("tipoRegime");
			Field<ListGraphType<TipoRelacaoSeguradoInputType>>("tipoRelacaoSegurado");
			Field<ListGraphType<TipoRendimentoInputType>>("tipoRendimento");
			Field<ListGraphType<TipoRenovacaoInputType>>("tipoRenovacao");
			Field<ListGraphType<TipoReseguroInputType>>("tipoReseguro");
			Field<ListGraphType<TipoResseguroInputType>>("tipoResseguro");
			Field<ListGraphType<TipoRiscoInputType>>("tipoRisco");
			Field<ListGraphType<TipoSalaEspetaculoInputType>>("tipoSalaEspetaculo");
			Field<ListGraphType<TipoSanguineoInputType>>("tipoSanguineo");
			Field<ListGraphType<TipoSectorInputType>>("tipoSector");
			Field<ListGraphType<TipoSegmentoInputType>>("tipoSegmento");
			Field<ListGraphType<TipoSegmentoComissionamentoInputType>>("tipoSegmentoComissionamento");
			Field<ListGraphType<TipoSeguroGrupoInputType>>("tipoSeguroGrupo");
			Field<ListGraphType<TipoServicoInputType>>("tipoServico");
			Field<ListGraphType<TipoSinistroInputType>>("tipoSinistro");
			Field<ListGraphType<TipoSociedadeInputType>>("tipoSociedade");
			Field<ListGraphType<TipoSubTratadoInputType>>("tipoSubTratado");
			Field<ListGraphType<TipoSubsidioSalarialInputType>>("tipoSubsidioSalarial");
			Field<ListGraphType<TipoSugestaoInputType>>("tipoSugestao");
			Field<ListGraphType<TipoTarefaInputType>>("tipoTarefa");
			Field<ListGraphType<TipoTarefaReparacaoInputType>>("tipoTarefaReparacao");
			Field<ListGraphType<TipoTarifaInputType>>("tipoTarifa");
			Field<ListGraphType<TipoTarifaPlanoProdutoInputType>>("tipoTarifaPlanoProduto");
			Field<ListGraphType<TipoTarifasResponsabilidadeInputType>>("tipoTarifasResponsabilidade");
			Field<ListGraphType<TipoTaxasInputType>>("tipoTaxas");
			Field<ListGraphType<TipoTerminoInputType>>("tipoTermino");
			Field<ListGraphType<TipoTransferenciaInputType>>("tipoTransferencia");
			Field<ListGraphType<TipoTratadoReseguroInputType>>("tipoTratadoReseguro");
			Field<ListGraphType<TipoUsoInputType>>("tipoUso");
			Field<ListGraphType<TipoViaNotificacaoInputType>>("tipoViaNotificacao");
			Field<ListGraphType<TiposDocumentoProdutoInputType>>("tiposDocumentoProduto");
			Field<ListGraphType<TituloInputType>>("titulo");
			Field<ListGraphType<TituloDesvalorizacaoInvalidezPermanenteInputType>>("tituloDesvalorizacaoInvalidezPermanente");
			Field<ListGraphType<TransferenciaInputType>>("transferencia");
			Field<ListGraphType<TransmissaoInputType>>("transmissao");
			Field<ListGraphType<UnidadeObjectoSeguradoInputType>>("unidadeObjectoSegurado");
			Field<ListGraphType<UnidadesTempoInputType>>("unidadesTempo");
			Field<ListGraphType<ValorCativoInputType>>("valorCativo");
			Field<ListGraphType<ValorCoberturaInputType>>("valorCobertura");
			Field<ListGraphType<ValorPadraoInputType>>("valorPadrao");
			Field<ListGraphType<ValoresCapitalSeguroFamiliarInputType>>("valoresCapitalSeguroFamiliar");
			Field<ListGraphType<ValoresTipoAntenaInputType>>("valoresTipoAntena");
			Field<ListGraphType<VantagemPlanoInputType>>("vantagemPlano");
			Field<ListGraphType<VantagemProdutoInputType>>("vantagemProduto");
			Field<ListGraphType<VelocidadeInputType>>("velocidade");
			Field<ListGraphType<ViagemInputType>>("viagem");
			Field<ListGraphType<ZonaInputType>>("zona");
			Field<ListGraphType<ZonaPeriodoCoberturaInputType>>("zonaPeriodoCobertura");
			
		}
	}
}