using System.Linq;
using GraphQL.Types;
using ISS.Application.Models;
using ISS.Application.Helpers;
using ISS.GraphQL.ServiceExtentions;
using ISS.Application.Dto;

namespace ISS.GraphQL.Type
{
    public class PessoaType : ObjectGraphType<Pessoa>
    {
        public PessoaType()
        {
            // Defining the name of the object
            Name = "pessoa";

            Field(x => x.IdPessoa, nullable: true);
            Field(x => x.NomeCompleto, nullable: true);
            Field<IntGraphType>("idade", resolve: c => c.Source.DataNascimento != null ? new System.DateTime(System.DateTime.Now.Subtract((System.DateTime)c.Source.DataNascimento).Ticks).Year : 0);
            Field(x => x.DataNascimento, nullable: true, type: typeof(DateTimeGraphType));
            Field(x => x.Nif, nullable: true);
            Field(x => x.ProcuradorId, nullable: true);
            Field(x => x.CanalId, nullable: true);
            Field(x => x.NumSegurancaSocial, nullable: true);
            Field(x => x.DataCriacao, nullable: true, type: typeof(DateTimeGraphType));
            Field(x => x.DataAtualizacao, nullable: true, type: typeof(DateTimeGraphType));
            Field(x => x.EstadoId, nullable: true);
            Field(x => x.TipoPessoaId, nullable: true);
            Field(x => x.UltModificacaoPorId, nullable: true);
            Field(x => x.NumEmpregados, nullable: true, type: typeof(IntGraphType));
            Field(x => x.RendimentoAnual, nullable: true, type: typeof(FloatGraphType));
            Field(x => x.RendimentoMensal, nullable: true, type: typeof(FloatGraphType));
            Field(x => x.CodPessoa, nullable: true);
            Field(x => x.EumPrestadorDeServico, nullable: true, type: typeof(BooleanGraphType));
            Field(x => x.NumPessoa, nullable: true, type: typeof(IntGraphType));
            FieldAsync<UsuarioType>("usuario", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Usuario>(c.Source.IdPessoa)));
            FieldAsync<CanalType>("canal", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Canal>(c.Source.CanalId)));
            FieldAsync<EstadoType>("estado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Estado>(c.Source.EstadoId)));
            FieldAsync<PessoaType>("procurador", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Pessoa>(c.Source.ProcuradorId)));
            FieldAsync<TipoPessoaType>("tipoPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoPessoa>(c.Source.TipoPessoaId)));
            FieldAsync<ClienteType>("cliente", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Cliente>(c.Source.IdPessoa)));
            FieldAsync<ListGraphType<ActividadeType>>("actividadeBeneficiario", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Actividade>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ActividadeType>>("actividadeDonoPedido", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Actividade>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ActividadeType>>("actividadePessoaResponsavel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Actividade>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<AgendaType>>("agenda", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Agenda>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<AnexosPessoaType>>("anexosPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<AnexosPessoa>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ApoliceType>>("apolice", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Apolice>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<AprovacaoType>>("aprovacaoAprovador", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Aprovacao>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<AprovacaoType>>("aprovacaoPreponente", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Aprovacao>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<AssinantesResseguroType>>("assinantesResseguro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<AssinantesResseguro>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<AccionistaEmpresaType>>("accionistaEmpresaAccionista", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<AccionistaEmpresa>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<AccionistaEmpresaType>>("accionistaEmpresaEmpresa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<AccionistaEmpresa>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<AssinaturaType>>("assinatura", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Assinatura>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<AutomovelType>>("automovel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Automovel>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<AutorizacaoType>>("autorizacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Autorizacao>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<BalcaoPlanoType>>("balcaoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<BalcaoPlano>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<BeneficiarioType>>("beneficiario", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Beneficiario>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<BonusType>>("bonus", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Bonus>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<CanalComissionamentoProdutorType>>("canalComissionamentoProdutor", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CanalComissionamentoProdutor>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<CarteiraClienteType>>("carteiraClienteProdutor", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CarteiraCliente>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<CarteiraClienteType>>("carteiraClienteTomador", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CarteiraCliente>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<CentroCustoType>>("centroCusto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CentroCusto>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<CentroResponsabilidadeType>>("centroResponsabilidade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CentroResponsabilidade>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<CoPagamentoType>>("coPagamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CoPagamento>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<CoSeguroType>>("coSeguro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<CoSeguro>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ComissaoType>>("comissao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Comissao>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ComissaoSelecionadaType>>("comissaoSelecionada", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ComissaoSelecionada>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ComissionamentoType>>("comissionamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Comissionamento>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ComissionamentoPlanoType>>("comissionamentoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ComissionamentoPlano>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ConstrucaoType>>("construcao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Construcao>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ConsumoPlafondType>>("consumoPlafond", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ConsumoPlafond>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ContaFinanceiraType>>("contaFinanceira", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ContaFinanceira>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ContactoType>>("contacto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ContactoPessoa,Contacto>(nameof(ContactoPessoa.ContactoId), nameof(Contacto.IdContacto))));
            FieldAsync<ListGraphType<ContinentePlanoType>>("continentePlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ContinentePlano>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ContratadosType>>("contratados", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Contratados>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ContratoType>>("contrato", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Contrato>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<RendimentosPessoaType>>("rendimentosPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<RendimentosPessoa>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ContratoPrestadorEmpresaType>>("contratoPrestadorEmpresaContratado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ContratoPrestadorEmpresa>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ContratoPrestadorEmpresaType>>("contratoPrestadorEmpresaContratante", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ContratoPrestadorEmpresa>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ContratoPrestadorEmpresaType>>("contratoPrestadorEmpresaPessoaResponsavelFuncionario1", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ContratoPrestadorEmpresa>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ContratoPrestadorEmpresaType>>("contratoPrestadorEmpresaPessoaResponsavelPrestadorNavigation", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ContratoPrestadorEmpresa>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<CotacaoType>>("cotacaoCobrador", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Cotacao>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<CotacaoType>>("cotacaoPessoaContacto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Cotacao>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<CotacaoType>>("cotacaoProdutor", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Cotacao>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<CotacaoType>>("cotacaoResponsavelAceitacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Cotacao>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<CotacaoType>>("cotacaoTomador", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Cotacao>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<DependenteType>>("dependentePessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Dependente>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<DependenteType>>("dependentePessoaDependente", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Dependente>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<DescontoType>>("desconto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Desconto>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<DescontoSeleccionadoType>>("descontoSeleccionado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DescontoSeleccionado>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<DespesaType>>("despesa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Despesa>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<DespesaSeleccionadaType>>("despesaSeleccionada", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DespesaSeleccionada>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<DocumentoIdentificacaoType>>("documentoIdentificacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DocumentoIdentificacao>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<DuracaoTipoContratoPlanoType>>("duracaoTipoContratoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<DuracaoTipoContratoPlano>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<EnderecoType>>("endereco", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<EnderecoPessoa,Endereco>(nameof(EnderecoPessoa.EnderecoId), nameof(Endereco.IdEndereco))));
            FieldAsync<ListGraphType<EnderecoPlanoType>>("enderecoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<EnderecoPlano>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ExcedenteType>>("excedente", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Excedente>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<NacionalidadePessoaType>>("nacionalidadePessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<NacionalidadePessoa>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<FacultativoResseguroType>>("facultativoResseguro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FacultativoResseguro>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<FidelizacaoType>>("fidelizacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Fidelizacao>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<FidelizacaoPlanoType>>("fidelizacaoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FidelizacaoPlano>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<FormaContratacaoPlanoType>>("formaContratacaoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FormaContratacaoPlano>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<FormaLiquidacaoPremioPlanoType>>("formaLiquidacaoPremioPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FormaLiquidacaoPremioPlano>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<FormaPagamentoPlanoType>>("formaPagamentoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FormaPagamentoPlano>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<FraccionamentoPlanoType>>("fraccionamentoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FraccionamentoPlano>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<FuncionarioType>>("funcionarioEmpresa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Funcionario>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<FuncionarioInstalacoesType>>("funcionarioInstalacoes", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<FuncionarioInstalacoes>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<FuncionarioType>>("funcionarioPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Funcionario>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<GrupoPessoasType>>("grupoPessoas", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<GrupoPessoas>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<HablitacoesLiterariasPlanoType>>("hablitacoesLiterariasPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<HablitacoesLiterariasPlano>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<InformacaoAdicionalType>>("informacaoAdicional", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<InformacaoAdicional>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<InformacaoBancariaType>>("informacaoBancaria", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<InformacaoBancaria>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<InfraccoesType>>("infraccoesAgentePolicial", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Infraccoes>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<InfraccoesType>>("infraccoesCondutor", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Infraccoes>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<PessoaType>>("inverseProcurador", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Pessoa>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<LesadoType>>("lesadoFornecedor", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Lesado>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<LesadoType>>("lesadoPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Lesado>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<LimiteCompetenciaType>>("limiteCompetencia", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<LimiteCompetencia>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ListaNegraType>>("listaNegra", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ListaNegra>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<MargemVendaProdutoType>>("margemVendaProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<MargemVendaProduto>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<MargemVendaSeleccionadoType>>("margemVendaSeleccionado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<MargemVendaSeleccionado>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<MembroAsseguradoType>>("membroAssegurado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<MembroAssegurado>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<MembrosGrupoType>>("membrosGrupo", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<MembrosGrupo>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<MotoristaAutomovelType>>("motoristaAutomovel", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<MotoristaAutomovel>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<NotaType>>("nota", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Nota>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ObjectoEnvolvidoType>>("objectoEnvolvidoCondutorSinistro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ObjectoEnvolvido>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ObjectoEnvolvidoType>>("objectoEnvolvidoDono", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ObjectoEnvolvido>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ObjectoTrabalhoPessoaType>>("objectoTrabalhoPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ObjectoTrabalhoPessoa>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ObservacoesBoletimAdesaoType>>("observacoesBoletimAdesao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ObservacoesBoletimAdesao>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<OrgaoRegularizadorType>>("orgaoRegularizador", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<OrgaoRegularizador>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<PacienteType>>("paciente", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Paciente>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<PapelPessoaType>>("papelPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PapelPessoa>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<PapelPlanoType>>("papelPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PapelPlano>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<PerfilDesenvolvimentoPessoaType>>("perfilDesenvolvimentoPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PerfilDesenvolvimentoPessoa>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<PeriodoPlanoPlanoType>>("periodoPlanoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PeriodoPlanoPlano>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<PessoaTarefaType>>("pessoaTarefa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PessoaTarefa>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<PessoasPolitamenteExpostasType>>("pessoasPolitamenteExpostas", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PessoasPolitamenteExpostas>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<PlanoComissionamentoProdutorType>>("planoComissionamentoProdutor", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PlanoComissionamentoProdutor>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<PrecosAtosMedicosType>>("precosAtosMedicos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PrecosAtosMedicos>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<PrecosMedicamentosType>>("precosMedicamentos", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<PrecosMedicamentos>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ProdutosPrestadoresType>>("produtosPrestadores", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ProdutosPrestadores>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ProfissaoPlanoType>>("profissaoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ProfissaoPlano>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<QuestionarioType>>("questionario", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Questionario>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ReclamacaoType>>("reclamacaoCausadorDoIncidente", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Reclamacao>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ReclamacaoType>>("reclamacaoPessoaRelacionada", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Reclamacao>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ReclamacaoType>>("reclamacaoReclamador", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Reclamacao>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ReclamacaoType>>("reclamacaoResponsavelPelaReclamacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Reclamacao>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ReembolsoDespesasMedicasType>>("reembolsoDespesasMedicas", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ReembolsoDespesasMedicas>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ReembolsoTratamentoDentarioType>>("reembolsoTratamentoDentario", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<ReembolsoTratamentoDentario>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<RenovacaoApoliceType>>("renovacaoApolice", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<RenovacaoApolice>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ReparacaoType>>("reparacao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Reparacao>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ResponsabilizadoType>>("responsabilizado", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Responsabilizado>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ResseguroType>>("resseguroMediador", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Resseguro>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ResseguroType>>("resseguroRessegurador", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Resseguro>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ResseguroType>>("resseguroSeguradoraDirecta", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Resseguro>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<ScoringType>>("scoring", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Scoring>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<SectorActividadePlanoType>>("sectorActividadePlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SectorActividadePlano>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<SectorActividadesProdutorType>>("sectorActividadesProdutor", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SectorActividadesProdutor>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<SegmentoComissionamentoProdutorType>>("segmentoComissionamentoProdutor", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SegmentoComissionamentoProdutor>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<SegmentoObjectivosComerciaisType>>("segmentoObjectivosComerciais", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SegmentoObjectivosComerciais>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<SegmentoProdutoType>>("segmentoProduto", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SegmentoProduto>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<SegmentoProdutoPlanoType>>("segmentoProdutoPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<SegmentoProdutoPlano>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<SinistroType>>("sinistroIncidenteInspector", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Sinistro>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<SinistroType>>("sinistroParticipanteSinistro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Sinistro>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<SugestaoType>>("sugestao", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Sugestao>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<TarefasAgendamentoType>>("tarefasAgendamento", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TarefasAgendamento>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<TerceiroType>>("terceiro", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Terceiro>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<TermoResponsabilidadeType>>("termoResponsabilidadePessoaSeguraNavigation", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TermoResponsabilidade>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<TermoResponsabilidadeType>>("termoResponsabilidadePrestadorServicoNavigation", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TermoResponsabilidade>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<TestemunhaType>>("testemunha", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Testemunha>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<TipoEntidadePlanoType>>("tipoEntidadePlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoEntidadePlano>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<TipoPessoaPlanoType>>("tipoPessoaPlano", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<TipoPessoaPlano>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<TitularidadeType>>("titularidade", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<Titularidade>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            FieldAsync<ListGraphType<RedeSocialPessoaType>>("redeSocialPessoa", resolve: async c => c.Resolve(await c.GetRepository().GetAsync<RedeSocialPessoa>(x => x.Where(e => e.HasValue(c.Source.IdPessoa)))));
            
        }
    }

    public class PessoaInputType : InputObjectGraphType<Pessoa>
	{
		public PessoaInputType()
		{
			// Defining the name of the object
			Name = "pessoaInput";
			
			Field(x => x.NomeCompleto, nullable:true);
			Field(x => x.DataNascimento,nullable:true,type:typeof(DateTimeGraphType));
			Field(x => x.Nif,nullable:true);
            Field(x => x.ProcuradorId, nullable: true);
            Field(x => x.CanalId, nullable: true);
            Field(x => x.NumSegurancaSocial, nullable: true);
			Field(x => x.DataCriacao,nullable:true,type:typeof(DateTimeGraphType));
			Field(x => x.DataAtualizacao,nullable:true,type:typeof(DateTimeGraphType));
            Field(x => x.EstadoId, nullable: true);
            Field(x => x.TipoPessoaId, nullable: true);
            Field(x => x.UltModificacaoPorId, nullable: true);
            Field(x => x.NumEmpregados, nullable: true);
            Field(x => x.RendimentoAnual, nullable: true);
            Field(x => x.RendimentoMensal, nullable: true);
            Field(x => x.EumPrestadorDeServico, nullable: true);
			Field(x => x.Usuario,nullable:true,type:typeof(UsuarioInputType));
			Field(x => x.Canal,nullable:true,type:typeof(CanalInputType));
			Field(x => x.Estado,nullable:true,type:typeof(EstadoInputType));
			Field(x => x.Procurador,nullable:true,type:typeof(PessoaInputType));
			Field(x => x.TipoPessoa,nullable:true,type:typeof(TipoPessoaInputType));
			Field(x => x.Cliente,nullable:true,type:typeof(ClienteInputType));
			Field(x => x.ActividadeBeneficiario,nullable:true,type:typeof(ListGraphType<ActividadeInputType>));
			Field(x => x.ActividadeDonoPedido,nullable:true,type:typeof(ListGraphType<ActividadeInputType>));
			Field(x => x.ActividadePessoaResponsavel,nullable:true,type:typeof(ListGraphType<ActividadeInputType>));
			Field(x => x.Agenda,nullable:true,type:typeof(ListGraphType<AgendaInputType>));
			Field(x => x.AnexosPessoa,nullable:true,type:typeof(ListGraphType<AnexosPessoaInputType>));
			Field(x => x.AprovacaoAprovador,nullable:true,type:typeof(ListGraphType<AprovacaoInputType>));
			Field(x => x.AprovacaoPreponente,nullable:true,type:typeof(ListGraphType<AprovacaoInputType>));
			Field(x => x.AssinantesResseguro,nullable:true,type:typeof(ListGraphType<AssinantesResseguroInputType>));
			Field(x => x.AccionistaEmpresaAccionista,nullable:true,type:typeof(ListGraphType<AccionistaEmpresaInputType>));
			Field(x => x.AccionistaEmpresaEmpresa,nullable:true,type:typeof(ListGraphType<AccionistaEmpresaInputType>));
			Field(x => x.Assinatura,nullable:true,type:typeof(ListGraphType<AssinaturaInputType>));
			Field(x => x.Automovel,nullable:true,type:typeof(ListGraphType<AutomovelInputType>));
			Field(x => x.Autorizacao,nullable:true,type:typeof(ListGraphType<AutorizacaoInputType>));
			Field(x => x.BalcaoPlano,nullable:true,type:typeof(ListGraphType<BalcaoPlanoInputType>));
			Field(x => x.Beneficiario,nullable:true,type:typeof(ListGraphType<BeneficiarioInputType>));
			Field(x => x.Bonus,nullable:true,type:typeof(ListGraphType<BonusInputType>));
			Field(x => x.CanalComissionamentoProdutor,nullable:true,type:typeof(ListGraphType<CanalComissionamentoProdutorInputType>));
			Field(x => x.CarteiraClienteProdutor,nullable:true,type:typeof(ListGraphType<CarteiraClienteInputType>));
			Field(x => x.CarteiraClienteTomador,nullable:true,type:typeof(ListGraphType<CarteiraClienteInputType>));
			Field(x => x.CentroCusto,nullable:true,type:typeof(ListGraphType<CentroCustoInputType>));
			Field(x => x.CentroResponsabilidade,nullable:true,type:typeof(ListGraphType<CentroResponsabilidadeInputType>));
			Field(x => x.CoPagamento,nullable:true,type:typeof(ListGraphType<CoPagamentoInputType>));
			Field(x => x.CoSeguro,nullable:true,type:typeof(ListGraphType<CoSeguroInputType>));
			Field(x => x.Comissao,nullable:true,type:typeof(ListGraphType<ComissaoInputType>));
			Field(x => x.ComissaoSelecionada,nullable:true,type:typeof(ListGraphType<ComissaoSelecionadaInputType>));
			Field(x => x.Comissionamento,nullable:true,type:typeof(ListGraphType<ComissionamentoInputType>));
			Field(x => x.ComissionamentoPlano,nullable:true,type:typeof(ListGraphType<ComissionamentoPlanoInputType>));
			Field(x => x.Construcao,nullable:true,type:typeof(ListGraphType<ConstrucaoInputType>));
			Field(x => x.ConsumoPlafond,nullable:true,type:typeof(ListGraphType<ConsumoPlafondInputType>));
			Field(x => x.ContaFinanceira,nullable:true,type:typeof(ListGraphType<ContaFinanceiraInputType>));
			Field(x => x.ContactoPessoa,nullable:true,type:typeof(ListGraphType<ContactoPessoaInputType>));
			Field(x => x.ContinentePlano,nullable:true,type:typeof(ListGraphType<ContinentePlanoInputType>));
			Field(x => x.Contratados,nullable:true,type:typeof(ListGraphType<ContratadosInputType>));
			Field(x => x.ContratoPrestadorEmpresaContratado,nullable:true,type:typeof(ListGraphType<ContratoPrestadorEmpresaInputType>));
			Field(x => x.ContratoPrestadorEmpresaContratante,nullable:true,type:typeof(ListGraphType<ContratoPrestadorEmpresaInputType>));
			Field(x => x.ContratoPrestadorEmpresaPessoaResponsavelFuncionario1,nullable:true,type:typeof(ListGraphType<ContratoPrestadorEmpresaInputType>));
			Field(x => x.ContratoPrestadorEmpresaPessoaResponsavelPrestadorNavigation,nullable:true,type:typeof(ListGraphType<ContratoPrestadorEmpresaInputType>));
			Field(x => x.DependentePessoa,nullable:true,type:typeof(ListGraphType<DependenteInputType>));
			Field(x => x.DependentePessoaDependente,nullable:true,type:typeof(ListGraphType<DependenteInputType>));
			Field(x => x.Desconto,nullable:true,type:typeof(ListGraphType<DescontoInputType>));
			Field(x => x.DescontoSeleccionado,nullable:true,type:typeof(ListGraphType<DescontoSeleccionadoInputType>));
			Field(x => x.Despesa,nullable:true,type:typeof(ListGraphType<DespesaInputType>));
			Field(x => x.DespesaSeleccionada,nullable:true,type:typeof(ListGraphType<DespesaSeleccionadaInputType>));
			Field(x => x.DocumentoIdentificacao,nullable:true,type:typeof(ListGraphType<DocumentoIdentificacaoInputType>));
			Field(x => x.DuracaoTipoContratoPlano,nullable:true,type:typeof(ListGraphType<DuracaoTipoContratoPlanoInputType>));
			Field(x => x.EnderecoPessoa,nullable:true,type:typeof(ListGraphType<EnderecoPessoaInputType>));
			Field(x => x.EnderecoPlano,nullable:true,type:typeof(ListGraphType<EnderecoPlanoInputType>));
			Field(x => x.Excedente,nullable:true,type:typeof(ListGraphType<ExcedenteInputType>));
			Field(x => x.NacionalidadePessoa,nullable:true,type:typeof(ListGraphType<NacionalidadePessoaInputType>));
			Field(x => x.FacultativoResseguro,nullable:true,type:typeof(ListGraphType<FacultativoResseguroInputType>));
			Field(x => x.Fidelizacao,nullable:true,type:typeof(ListGraphType<FidelizacaoInputType>));
			Field(x => x.FidelizacaoPlano,nullable:true,type:typeof(ListGraphType<FidelizacaoPlanoInputType>));
			Field(x => x.FormaContratacaoPlano,nullable:true,type:typeof(ListGraphType<FormaContratacaoPlanoInputType>));
			Field(x => x.FormaLiquidacaoPremioPlano,nullable:true,type:typeof(ListGraphType<FormaLiquidacaoPremioPlanoInputType>));
			Field(x => x.FormaPagamentoPlano,nullable:true,type:typeof(ListGraphType<FormaPagamentoPlanoInputType>));
			Field(x => x.FraccionamentoPlano,nullable:true,type:typeof(ListGraphType<FraccionamentoPlanoInputType>));
			Field(x => x.FuncionarioEmpresa,nullable:true,type:typeof(ListGraphType<FuncionarioInputType>));
			Field(x => x.FuncionarioInstalacoes,nullable:true,type:typeof(ListGraphType<FuncionarioInstalacoesInputType>));
			Field(x => x.FuncionarioPessoa,nullable:true,type:typeof(ListGraphType<FuncionarioInputType>));
			Field(x => x.GrupoPessoas,nullable:true,type:typeof(ListGraphType<GrupoPessoasInputType>));
			Field(x => x.InformacaoAdicional,nullable:true,type:typeof(ListGraphType<InformacaoAdicionalInputType>));
			Field(x => x.InformacaoBancaria,nullable:true,type:typeof(ListGraphType<InformacaoBancariaInputType>));
			Field(x => x.InfraccoesAgentePolicial,nullable:true,type:typeof(ListGraphType<InfraccoesInputType>));
			Field(x => x.InfraccoesCondutor,nullable:true,type:typeof(ListGraphType<InfraccoesInputType>));
			Field(x => x.LesadoFornecedor,nullable:true,type:typeof(ListGraphType<LesadoInputType>));
			Field(x => x.LesadoPessoa,nullable:true,type:typeof(ListGraphType<LesadoInputType>));
			Field(x => x.LimiteCompetencia,nullable:true,type:typeof(ListGraphType<LimiteCompetenciaInputType>));
			Field(x => x.ListaNegra,nullable:true,type:typeof(ListGraphType<ListaNegraInputType>));
			Field(x => x.MargemVendaProduto,nullable:true,type:typeof(ListGraphType<MargemVendaProdutoInputType>));
			Field(x => x.MargemVendaSeleccionado,nullable:true,type:typeof(ListGraphType<MargemVendaSeleccionadoInputType>));
			Field(x => x.MembroAssegurado,nullable:true,type:typeof(ListGraphType<MembroAsseguradoInputType>));
			Field(x => x.MembrosGrupo,nullable:true,type:typeof(ListGraphType<MembrosGrupoInputType>));
			Field(x => x.MotoristaAutomovel,nullable:true,type:typeof(ListGraphType<MotoristaAutomovelInputType>));
			Field(x => x.Nota,nullable:true,type:typeof(ListGraphType<NotaInputType>));
			Field(x => x.ObjectoEnvolvidoCondutorSinistro,nullable:true,type:typeof(ListGraphType<ObjectoEnvolvidoInputType>));
			Field(x => x.ObjectoEnvolvidoDono,nullable:true,type:typeof(ListGraphType<ObjectoEnvolvidoInputType>));
			Field(x => x.ObjectoTrabalhoPessoa,nullable:true,type:typeof(ListGraphType<ObjectoTrabalhoPessoaInputType>));
			Field(x => x.ObservacoesBoletimAdesao,nullable:true,type:typeof(ListGraphType<ObservacoesBoletimAdesaoInputType>));
			Field(x => x.OrgaoRegularizador,nullable:true,type:typeof(ListGraphType<OrgaoRegularizadorInputType>));
			Field(x => x.Paciente,nullable:true,type:typeof(ListGraphType<PacienteInputType>));
			Field(x => x.PapelPessoa,nullable:true,type:typeof(ListGraphType<PapelPessoaInputType>));
			Field(x => x.PapelPlano,nullable:true,type:typeof(ListGraphType<PapelPlanoInputType>));
			Field(x => x.PerfilDesenvolvimentoPessoa,nullable:true,type:typeof(ListGraphType<PerfilDesenvolvimentoPessoaInputType>));
			Field(x => x.PeriodoPlanoPlano,nullable:true,type:typeof(ListGraphType<PeriodoPlanoPlanoInputType>));
			Field(x => x.PessoaTarefa,nullable:true,type:typeof(ListGraphType<PessoaTarefaInputType>));
			Field(x => x.PessoasPolitamenteExpostas,nullable:true,type:typeof(ListGraphType<PessoasPolitamenteExpostasInputType>));
			Field(x => x.PlanoComissionamentoProdutor,nullable:true,type:typeof(ListGraphType<PlanoComissionamentoProdutorInputType>));
			Field(x => x.PrecosAtosMedicos,nullable:true,type:typeof(ListGraphType<PrecosAtosMedicosInputType>));
			Field(x => x.PrecosMedicamentos,nullable:true,type:typeof(ListGraphType<PrecosMedicamentosInputType>));
			Field(x => x.ProdutosPrestadores,nullable:true,type:typeof(ListGraphType<ProdutosPrestadoresInputType>));
			Field(x => x.ProfissaoPlano,nullable:true,type:typeof(ListGraphType<ProfissaoPlanoInputType>));
			Field(x => x.Questionario,nullable:true,type:typeof(ListGraphType<QuestionarioInputType>));
			Field(x => x.ReclamacaoCausadorDoIncidente,nullable:true,type:typeof(ListGraphType<ReclamacaoInputType>));
			Field(x => x.ReclamacaoPessoaRelacionada,nullable:true,type:typeof(ListGraphType<ReclamacaoInputType>));
			Field(x => x.ReclamacaoReclamador,nullable:true,type:typeof(ListGraphType<ReclamacaoInputType>));
			Field(x => x.ReclamacaoResponsavelPelaReclamacao,nullable:true,type:typeof(ListGraphType<ReclamacaoInputType>));
			Field(x => x.ReembolsoDespesasMedicas,nullable:true,type:typeof(ListGraphType<ReembolsoDespesasMedicasInputType>));
			Field(x => x.ReembolsoTratamentoDentario,nullable:true,type:typeof(ListGraphType<ReembolsoTratamentoDentarioInputType>));
			Field(x => x.RenovacaoApolice,nullable:true,type:typeof(ListGraphType<RenovacaoApoliceInputType>));
			Field(x => x.Reparacao,nullable:true,type:typeof(ListGraphType<ReparacaoInputType>));
			Field(x => x.Responsabilizado,nullable:true,type:typeof(ListGraphType<ResponsabilizadoInputType>));
			Field(x => x.Scoring,nullable:true,type:typeof(ListGraphType<ScoringInputType>));
			Field(x => x.SectorActividadePlano,nullable:true,type:typeof(ListGraphType<SectorActividadePlanoInputType>));
			Field(x => x.SectorActividadesProdutor,nullable:true,type:typeof(ListGraphType<SectorActividadesProdutorInputType>));
			Field(x => x.SegmentoComissionamentoProdutor,nullable:true,type:typeof(ListGraphType<SegmentoComissionamentoProdutorInputType>));
			Field(x => x.SegmentoObjectivosComerciais,nullable:true,type:typeof(ListGraphType<SegmentoObjectivosComerciaisInputType>));
			Field(x => x.SegmentoProduto,nullable:true,type:typeof(ListGraphType<SegmentoProdutoInputType>));
			Field(x => x.SegmentoProdutoPlano,nullable:true,type:typeof(ListGraphType<SegmentoProdutoPlanoInputType>));
			Field(x => x.SinistroIncidenteInspector,nullable:true,type:typeof(ListGraphType<SinistroInputType>));
			Field(x => x.SinistroParticipanteSinistro,nullable:true,type:typeof(ListGraphType<SinistroInputType>));
			Field(x => x.Sugestao,nullable:true,type:typeof(ListGraphType<SugestaoInputType>));
			Field(x => x.TarefasAgendamento,nullable:true,type:typeof(ListGraphType<TarefasAgendamentoInputType>));
			Field(x => x.Terceiro,nullable:true,type:typeof(ListGraphType<TerceiroInputType>));
			Field(x => x.TermoResponsabilidadePessoaSeguraNavigation,nullable:true,type:typeof(ListGraphType<TermoResponsabilidadeInputType>));
			Field(x => x.TermoResponsabilidadePrestadorServicoNavigation,nullable:true,type:typeof(ListGraphType<TermoResponsabilidadeInputType>));
			Field(x => x.Testemunha,nullable:true,type:typeof(ListGraphType<TestemunhaInputType>));
			Field(x => x.TipoEntidadePlano,nullable:true,type:typeof(ListGraphType<TipoEntidadePlanoInputType>));
			Field(x => x.TipoPessoaPlano,nullable:true,type:typeof(ListGraphType<TipoPessoaPlanoInputType>));
			Field(x => x.Titularidade,nullable:true,type:typeof(ListGraphType<TitularidadeInputType>));
			Field(x => x.RedeSocialPessoa,nullable:true,type:typeof(ListGraphType<RedeSocialPessoaInputType>));
        }
	}
}