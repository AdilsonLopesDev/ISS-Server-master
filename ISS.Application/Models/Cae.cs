// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace ISS.Application.Models
{
    [Table("CAE")]
    public partial class Cae
    {
        public Cae()
        {
            Banco = new HashSet<Banco>();
            CaePlano = new HashSet<CaePlano>();
            ContratoCae = new HashSet<ContratoCae>();
            Cotacao = new HashSet<Cotacao>();
            Empresa = new HashSet<Empresa>();
            EntidadeEmpregadora = new HashSet<EntidadeEmpregadora>();
            Movimento = new HashSet<Movimento>();
            Pessoa = new HashSet<Pessoa>();
            RendimentosPessoa = new HashSet<RendimentosPessoa>();
            SegmentoFranquia = new HashSet<SegmentoFranquia>();
            SegmentoProduto = new HashSet<SegmentoProduto>();
            SegmentoTipoCobertura = new HashSet<SegmentoTipoCobertura>();
            Simulacao = new HashSet<Simulacao>();
            SubSector = new HashSet<SubSector>();
        }

        [Column("IdCAE")]
        [StringLength(50)]
        public string IdCae { get; set; }
        [Required]
        [Column("CodCAE")]
        [StringLength(50)]
        public string CodCae { get; set; }
        [StringLength(2048)]
        public string Designacao { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? DataCriacao { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? DataAtualizacao { get; set; }
        [Column("TituloCaeID")]
        [StringLength(50)]
        public string TituloCaeId { get; set; }
        public double? TaxaComercial { get; set; }
        [Column("NivelRiscoID")]
        [StringLength(50)]
        public string NivelRiscoId { get; set; }
        [Required]
        public bool? IsTaxa { get; set; }
        [Column("EstadoID")]
        [StringLength(50)]
        public string EstadoId { get; set; }
        [Column("UltModificacaoPorID")]
        [StringLength(50)]
        public string UltModificacaoPorId { get; set; }
        [StringLength(50)]
        public string AutoridadeSupervisaoId { get; set; }
        [StringLength(50)]
        public string ClassificacaoModalidadeCaeId { get; set; }

        [ForeignKey("AutoridadeSupervisaoId")]
        [InverseProperty("Cae")]
        public virtual AutoridadeSupervisao AutoridadeSupervisao { get; set; }
        [ForeignKey("ClassificacaoModalidadeCaeId")]
        [InverseProperty("Cae")]
        public virtual ClassificacaoModalidadeCae ClassificacaoModalidadeCae { get; set; }
        [ForeignKey("EstadoId")]
        [InverseProperty("Cae")]
        public virtual Estado Estado { get; set; }
        [ForeignKey("NivelRiscoId")]
        [InverseProperty("Cae")]
        public virtual NivelRisco NivelRisco { get; set; }
        [ForeignKey("TituloCaeId")]
        [InverseProperty("Cae")]
        public virtual SectorAtividadeEconomica TituloCae { get; set; }
        [InverseProperty("Cae")]
        public virtual ICollection<Banco> Banco { get; set; }
        [InverseProperty("Cae")]
        public virtual ICollection<CaePlano> CaePlano { get; set; }
        [InverseProperty("Cae")]
        public virtual ICollection<ContratoCae> ContratoCae { get; set; }
        [InverseProperty("Cae")]
        public virtual ICollection<Cotacao> Cotacao { get; set; }
        [InverseProperty("Cae")]
        public virtual ICollection<Empresa> Empresa { get; set; }
        [InverseProperty("Cae")]
        public virtual ICollection<EntidadeEmpregadora> EntidadeEmpregadora { get; set; }
        public virtual ICollection<Movimento> Movimento { get; set; }
        [InverseProperty("Cae")]
        public virtual ICollection<Pessoa> Pessoa { get; set; }
        [InverseProperty("Cae")]
        public virtual ICollection<RendimentosPessoa> RendimentosPessoa { get; set; }
        [InverseProperty("Cae")]
        public virtual ICollection<SegmentoFranquia> SegmentoFranquia { get; set; }
        [InverseProperty("Cae")]
        public virtual ICollection<SegmentoProduto> SegmentoProduto { get; set; }
        [InverseProperty("Cae")]
        public virtual ICollection<SegmentoTipoCobertura> SegmentoTipoCobertura { get; set; }
        [InverseProperty("Cae")]
        public virtual ICollection<Simulacao> Simulacao { get; set; }
        [InverseProperty("Cai")]
        public virtual ICollection<SubSector> SubSector { get; set; }
    }
}