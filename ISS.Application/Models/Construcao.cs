// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace ISS.Application.Models
{
    public partial class Construcao
    {
        public Construcao()
        {
            CaracteristicasConstrucao = new HashSet<CaracteristicasConstrucao>();
            DimensaoConstrucao = new HashSet<DimensaoConstrucao>();
            ImagensConstrucao = new HashSet<ImagensConstrucao>();
            ObjectoEnvolvido = new HashSet<ObjectoEnvolvido>();
            SistemaAquecimento = new HashSet<SistemaAquecimento>();
        }

        [StringLength(50)]
        public string IdConstrucao { get; set; }
        [Column(TypeName = "date")]
        public DateTime? DataInicioConstrucao { get; set; }
        [Column(TypeName = "date")]
        public DateTime? DataFimConstrucao { get; set; }
        [Column(TypeName = "date")]
        public DateTime? DataEmissaoPermissaoConstrucao { get; set; }
        [StringLength(1000)]
        public string Designacao { get; set; }
        [Column(TypeName = "date")]
        public DateTime? DataRenovacao { get; set; }
        public double? ValorCustoConstrucao { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? DataHoraCompra { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? DataHoraVigencia { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? DataValidade { get; set; }
        public double PercentagemAdquirida { get; set; }
        [Column("EnderecoID")]
        [StringLength(50)]
        public string EnderecoId { get; set; }
        [Column("TipoPropriedadeID")]
        [StringLength(50)]
        public string TipoPropriedadeId { get; set; }
        [Column("ProprietarioID")]
        [StringLength(50)]
        public string ProprietarioId { get; set; }
        [StringLength(50)]
        public string TipoMaterialConstrucaoId { get; set; }
        public byte? NumAndares { get; set; }
        public int? NumApartamentos { get; set; }
        public int? NumQuartos { get; set; }
        public int? NumQuartosVisitas { get; set; }
        public int? NumQuartosBanho { get; set; }
        public int? NumSalas { get; set; }
        public int? NumChamines { get; set; }
        public int? NumCaves { get; set; }
        public int? NumPiscinas { get; set; }
        public int? NumEscadaRolante { get; set; }
        public bool? Antena { get; set; }
        public bool? Cave { get; set; }
        public double? PercentagemCompletudePredio { get; set; }
        [Column(TypeName = "date")]
        public DateTime? DataEstimativaCompletude { get; set; }
        public int? NumElevadores { get; set; }
        public bool? Modificado { get; set; }
        public bool? SinalDanoEstrutural { get; set; }
        public int? NumMaximoVeiculos { get; set; }
        [Column("TipoInstalacaoElectricaID")]
        [StringLength(50)]
        public string TipoInstalacaoElectricaId { get; set; }
        public bool? VidrosResistenteFuracao { get; set; }
        [StringLength(50)]
        public string MedidaAreaPredio { get; set; }
        [StringLength(500)]
        public string CaminhoPlanta { get; set; }
        [Column("CotacaoID")]
        [StringLength(50)]
        public string CotacaoId { get; set; }
        [StringLength(50)]
        public string TipoCasaId { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? DataCriacao { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? DataAtualizacao { get; set; }
        [Column("ApoliceID")]
        [StringLength(50)]
        public string ApoliceId { get; set; }
        [Required]
        public bool? IsTaxa { get; set; }
        [Column("EstadoID")]
        [StringLength(50)]
        public string EstadoId { get; set; }
        [Column("UltModificacaoPorID")]
        [StringLength(50)]
        public string UltModificacaoPorId { get; set; }
        [StringLength(50)]
        public string CodConstrucao { get; set; }

        [ForeignKey("ApoliceId")]
        [InverseProperty("Construcao")]
        public virtual Apolice Apolice { get; set; }
        [ForeignKey("CotacaoId")]
        [InverseProperty("Construcao")]
        public virtual Cotacao Cotacao { get; set; }
        [ForeignKey("EnderecoId")]
        [InverseProperty("Construcao")]
        public virtual Endereco Endereco { get; set; }
        [ForeignKey("EstadoId")]
        [InverseProperty("Construcao")]
        public virtual Estado Estado { get; set; }
        [ForeignKey("ProprietarioId")]
        [InverseProperty("Construcao")]
        public virtual Pessoa Proprietario { get; set; }
        [ForeignKey("TipoCasaId")]
        [InverseProperty("Construcao")]
        public virtual TipoCasa TipoCasa { get; set; }
        [ForeignKey("TipoInstalacaoElectricaId")]
        [InverseProperty("Construcao")]
        public virtual TipoInstalacaoElectrica TipoInstalacaoElectrica { get; set; }
        [ForeignKey("TipoMaterialConstrucaoId")]
        [InverseProperty("Construcao")]
        public virtual TipoMaterialConstrucao TipoMaterialConstrucao { get; set; }
        [ForeignKey("TipoPropriedadeId")]
        [InverseProperty("Construcao")]
        public virtual TipoPropriedade TipoPropriedade { get; set; }
        [InverseProperty("Construcao")]
        public virtual ICollection<CaracteristicasConstrucao> CaracteristicasConstrucao { get; set; }
        [InverseProperty("Construcao")]
        public virtual ICollection<DimensaoConstrucao> DimensaoConstrucao { get; set; }
        [InverseProperty("Construcao")]
        public virtual ICollection<ImagensConstrucao> ImagensConstrucao { get; set; }
        [InverseProperty("Construcao")]
        public virtual ICollection<ObjectoEnvolvido> ObjectoEnvolvido { get; set; }
        [InverseProperty("Construcao")]
        public virtual ICollection<SistemaAquecimento> SistemaAquecimento { get; set; }
    }
}