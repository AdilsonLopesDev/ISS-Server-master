// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace ISS.Application.Models
{
    public partial class Funcionario
    {
        public Funcionario()
        {
            Caixa = new HashSet<Caixa>();
            ChefeDepartamento = new HashSet<ChefeDepartamento>();
            ChefeSeccao = new HashSet<ChefeSeccao>();
            ChefeSector = new HashSet<ChefeSector>();
            ContratoPrestadorEmpresa = new HashSet<ContratoPrestadorEmpresa>();
            DirectorDireccao = new HashSet<DirectorDireccao>();
            MembroCad = new HashSet<MembroCad>();
            Movimento = new HashSet<Movimento>();
            ReembolsoDespesasMedicas = new HashSet<ReembolsoDespesasMedicas>();
            ReembolsoTratamentoDentario = new HashSet<ReembolsoTratamentoDentario>();
            ResponsavelBalcao = new HashSet<ResponsavelBalcao>();
            TermoResponsabilidadeEmpregadoNavigation = new HashSet<TermoResponsabilidade>();
            TermoResponsabilidadeMedicoPrescritorNavigation = new HashSet<TermoResponsabilidade>();
            ValorCativoCativadoPor = new HashSet<ValorCativo>();
            ValorCativoDescativadoPor = new HashSet<ValorCativo>();
        }

        [StringLength(50)]
        public string IdFuncionario { get; set; }
        [StringLength(50)]
        public string EmpresaId { get; set; }
        [StringLength(50)]
        public string PessoaId { get; set; }
        [StringLength(50)]
        public string NumIdentificacao { get; set; }
        [Column(TypeName = "date")]
        public DateTime? DataContratacao { get; set; }
        [Column(TypeName = "date")]
        public DateTime? DataInicioTrabalho { get; set; }
        [Column("DepartamentoID")]
        [StringLength(50)]
        public string DepartamentoId { get; set; }
        [Column("SectorID")]
        [StringLength(50)]
        public string SectorId { get; set; }
        [Column("SeccaoID")]
        [StringLength(50)]
        public string SeccaoId { get; set; }
        [Column("FuncaoID")]
        [StringLength(50)]
        public string FuncaoId { get; set; }
        [Column("CategoriaID")]
        [StringLength(50)]
        public string CategoriaId { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? DataCriacao { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? DataAtualizacao { get; set; }
        [Column("CargoFuncionarioID")]
        [StringLength(50)]
        public string CargoFuncionarioId { get; set; }
        [Column("AreaID")]
        [StringLength(50)]
        public string AreaId { get; set; }
        [Column("EstadoID")]
        [StringLength(50)]
        public string EstadoId { get; set; }
        [Column("UltModificacaoPorID")]
        [StringLength(50)]
        public string UltModificacaoPorId { get; set; }
        public int? NumeroCedulaProfissional { get; set; }
        [Required]
        [StringLength(50)]
        public string CodFuncionario { get; set; }

        [ForeignKey("AreaId")]
        [InverseProperty("Funcionario")]
        public virtual Area Area { get; set; }
        [ForeignKey("CategoriaId")]
        [InverseProperty("Funcionario")]
        public virtual CategoriaFuncao Categoria { get; set; }
        [ForeignKey("DepartamentoId")]
        [InverseProperty("Funcionario")]
        public virtual Departamento Departamento { get; set; }
        [ForeignKey("EmpresaId")]
        [InverseProperty("FuncionarioEmpresa")]
        public virtual Pessoa Empresa { get; set; }
        [ForeignKey("EstadoId")]
        [InverseProperty("Funcionario")]
        public virtual Estado Estado { get; set; }
        [ForeignKey("FuncaoId")]
        [InverseProperty("Funcionario")]
        public virtual Funcao Funcao { get; set; }
        [ForeignKey("PessoaId")]
        [InverseProperty("FuncionarioPessoa")]
        public virtual Pessoa Pessoa { get; set; }
        [ForeignKey("SeccaoId")]
        [InverseProperty("Funcionario")]
        public virtual Seccao Seccao { get; set; }
        [ForeignKey("SectorId")]
        [InverseProperty("Funcionario")]
        public virtual Sector Sector { get; set; }
        [InverseProperty("Funcionario")]
        public virtual ICollection<Caixa> Caixa { get; set; }
        [InverseProperty("Chefe")]
        public virtual ICollection<ChefeDepartamento> ChefeDepartamento { get; set; }
        [InverseProperty("Chefe")]
        public virtual ICollection<ChefeSeccao> ChefeSeccao { get; set; }
        [InverseProperty("Chefe")]
        public virtual ICollection<ChefeSector> ChefeSector { get; set; }
        [InverseProperty("PessoaResponsavelFuncionarioNavigation")]
        public virtual ICollection<ContratoPrestadorEmpresa> ContratoPrestadorEmpresa { get; set; }
        [InverseProperty("Director")]
        public virtual ICollection<DirectorDireccao> DirectorDireccao { get; set; }
        [InverseProperty("Membro")]
        public virtual ICollection<MembroCad> MembroCad { get; set; }
        public virtual ICollection<Movimento> Movimento { get; set; }
        [InverseProperty("EmpregadoNavigation")]
        public virtual ICollection<ReembolsoDespesasMedicas> ReembolsoDespesasMedicas { get; set; }
        [InverseProperty("EstomatologistaNavigation")]
        public virtual ICollection<ReembolsoTratamentoDentario> ReembolsoTratamentoDentario { get; set; }
        [InverseProperty("Responsavel")]
        public virtual ICollection<ResponsavelBalcao> ResponsavelBalcao { get; set; }
        [InverseProperty("EmpregadoNavigation")]
        public virtual ICollection<TermoResponsabilidade> TermoResponsabilidadeEmpregadoNavigation { get; set; }
        [InverseProperty("MedicoPrescritorNavigation")]
        public virtual ICollection<TermoResponsabilidade> TermoResponsabilidadeMedicoPrescritorNavigation { get; set; }
        [InverseProperty("CativadoPor")]
        public virtual ICollection<ValorCativo> ValorCativoCativadoPor { get; set; }
        [InverseProperty("DescativadoPor")]
        public virtual ICollection<ValorCativo> ValorCativoDescativadoPor { get; set; }
    }
}