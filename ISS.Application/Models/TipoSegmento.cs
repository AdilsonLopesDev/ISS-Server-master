// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace ISS.Application.Models
{
    public partial class TipoSegmento
    {
        public TipoSegmento()
        {
            ContratoSegmentos = new HashSet<ContratoSegmentos>();
            LimiteCompetencia = new HashSet<LimiteCompetencia>();
            Papel = new HashSet<Papel>();
            PapelPessoa = new HashSet<PapelPessoa>();
            SectorActividadesProdutor = new HashSet<SectorActividadesProdutor>();
            SegmentoComissionamentoProdutor = new HashSet<SegmentoComissionamentoProdutor>();
            SegmentoFranquia = new HashSet<SegmentoFranquia>();
            SegmentoObjectivosComerciais = new HashSet<SegmentoObjectivosComerciais>();
            SegmentoProduto = new HashSet<SegmentoProduto>();
            SegmentoTipoCobertura = new HashSet<SegmentoTipoCobertura>();
            TipoSegmentoComissionamento = new HashSet<TipoSegmentoComissionamento>();
            TipoSegmentoContrato = new HashSet<TipoSegmentoContrato>();
            TipoSegmentoPlano = new HashSet<TipoSegmentoPlano>();
            TipoSegmentosComissionamento = new HashSet<TipoSegmentosComissionamento>();
        }

        [StringLength(50)]
        public string IdTipoSegmento { get; set; }
        [StringLength(2048)]
        public string Designacao { get; set; }
        [StringLength(10)]
        public string CodTipoSegmento { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? DataCriacao { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? DataAtualizacao { get; set; }
        public double TaxaAgravamento { get; set; }
        public int NumRegistos { get; set; }
        [Required]
        public bool? IsTaxa { get; set; }
        [Column("EstadoID")]
        [StringLength(50)]
        public string EstadoId { get; set; }
        [StringLength(500)]
        public string CaminhoIcone { get; set; }
        [Column("UltModificacaoPorID")]
        [StringLength(50)]
        public string UltModificacaoPorId { get; set; }
        [Required]
        public bool? Contabiliza { get; set; }
        [StringLength(50)]
        public string TipoPessoaId { get; set; }
        [StringLength(50)]
        public string DimensaoEmpresaId { get; set; }

        [ForeignKey("DimensaoEmpresaId")]
        [InverseProperty("TipoSegmento")]
        public virtual DimensaoEmpresa DimensaoEmpresa { get; set; }
        [ForeignKey("EstadoId")]
        [InverseProperty("TipoSegmento")]
        public virtual Estado Estado { get; set; }
        [ForeignKey("TipoPessoaId")]
        [InverseProperty("TipoSegmento")]
        public virtual TipoPessoa TipoPessoa { get; set; }
        [InverseProperty("TipoSegmento")]
        public virtual ICollection<ContratoSegmentos> ContratoSegmentos { get; set; }
        [InverseProperty("TipoSegmento")]
        public virtual ICollection<LimiteCompetencia> LimiteCompetencia { get; set; }
        [InverseProperty("TipoSegmento")]
        public virtual ICollection<Papel> Papel { get; set; }
        [InverseProperty("TipoSegmento")]
        public virtual ICollection<PapelPessoa> PapelPessoa { get; set; }
        [InverseProperty("TipoSegmento")]
        public virtual ICollection<SectorActividadesProdutor> SectorActividadesProdutor { get; set; }
        [InverseProperty("TipoSegmento")]
        public virtual ICollection<SegmentoComissionamentoProdutor> SegmentoComissionamentoProdutor { get; set; }
        [InverseProperty("Segmento")]
        public virtual ICollection<SegmentoFranquia> SegmentoFranquia { get; set; }
        [InverseProperty("TipoSegmento")]
        public virtual ICollection<SegmentoObjectivosComerciais> SegmentoObjectivosComerciais { get; set; }
        [InverseProperty("TipoSegmento")]
        public virtual ICollection<SegmentoProduto> SegmentoProduto { get; set; }
        [InverseProperty("TipoSegmento")]
        public virtual ICollection<SegmentoTipoCobertura> SegmentoTipoCobertura { get; set; }
        [InverseProperty("TipoSegmento")]
        public virtual ICollection<TipoSegmentoComissionamento> TipoSegmentoComissionamento { get; set; }
        [InverseProperty("TipoSegmento")]
        public virtual ICollection<TipoSegmentoContrato> TipoSegmentoContrato { get; set; }
        [InverseProperty("TipoSegmento")]
        public virtual ICollection<TipoSegmentoPlano> TipoSegmentoPlano { get; set; }
        [InverseProperty("TipoSegmento")]
        public virtual ICollection<TipoSegmentosComissionamento> TipoSegmentosComissionamento { get; set; }
    }
}